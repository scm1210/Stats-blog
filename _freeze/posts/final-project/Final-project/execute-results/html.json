{
  "hash": "fe40bb804c5608279c2c3d2c3ee9262e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Final Project: Prediciting Head to Head Pok√©mon Wins with Multi-level Binary Logistic Regression\"\nsubtitle: \"Psy-504\"\nauthor: \n  - Steven Mesquiti\ninstitute: \"Princeton University\"\noutput: \n  tufte::tufte_html:\n    css: \n    tufte_variant: \"envisioned\"\n    highlight: github-dark\n    fig_height: 10\n    fig_width: 16\n    toc: true\n    toc_depth: 1\n    code-fold: true\n    code-summary: \"Show code\"\nexecute: \n  message: false\n  warning: false\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\njupyter: python3\nengine: knitr\ncategories: [Final-Project, code, analysis]\nimage: \"images/preview-image.png\"\n---\n\n\n\n# Overview\n\nThis tutorial will walk you through the process of simulating Pok√©mon battles using the OpenAI API and then analyzing the results using a multi-level binary logistic regression model using a Specification Curve Analysis framework. The main analytic goal is to see which pokemon stats are most predictive of winning a battle.\n\nWe are using a multi-level binary logistic regression model because...\n\n![](images/preview-image.png){fig-align=\"center\"}\n\n# Load packages:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require('pacman')) {\n\tinstall.packages('pacman')\n}\nlibrary(pacman)\npacman::p_load(tidyverse, DT, broom, performance,\n               ordinal,car,ggeffects,gofact,lme4,\n               emmeans,knirt,MASS,brant,devtool,purr,GGally,\n               specr, furrr,install = TRUE)\ndevtools::install_github(\"hadley/emo\")\n\n#### define plot objects and stuff\n\npalette <- c(\n  \"#772e25\", \"#c44536\", \"#ee9b00\", \"#197278\", \"#283d3b\", \n  \"#9CC5A1\", \"#6195C6\", \"#ADA7C9\", \"#4D4861\", \"grey50\",\n  \"#d4a373\", \"#8a5a44\", \"#4a6a74\", \"#5c80a8\", \"#a9c5a0\",\n  \"#7b9b8e\", \"#e1b16a\", \"#a69b7c\", \"#9d94c4\", \"#665c54\"\n)\n\npalette_condition = c(\"#ee9b00\", \"#c44536\",\"#005f73\", \"#283d3b\", \"#9CC5A1\", \"#6195C6\", \"#ADA7C9\", \"#4D4861\")\n\nplot_aes = theme_minimal() +\n  theme(\n    legend.position = \"top\",\n    legend.text = element_text(size = 12),\n    text = element_text(size = 16, family = \"Futura Medium\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks.y = element_blank(),\n    plot.title = element_text(size = 20, hjust = 0.5) # Adjusted title size and centering\n  )\n```\n:::\n\n\n\n# GPT Pipeline {.tabset}\n\nFirst, before we conduct any statistical analyses, we will use the OpenAI API to simulate Pok√©mon battles. This will allow us to create a dataset of battle outcomes based on Pok√©mon stats. We are going to use `gpt-3.5-turbo` to simulate the battles. Given that this is a rather simple task, we don't need to leverage a terribly complex or powerful model (e.g., `gpt-4`).\n\n## Load Libraries, API Key, and set model information\n\nStart by loading in the necessary libraries (and installing them if necessary) and setting up the OpenAI API key. I'd recommend running this in a separate notebook, as it will take a while to run the \\~3000 individual battles. We also set a temperature of 0 to make the model *more* deterministic.\n\n::: callout\nüí° It is important to note that you should not share your OpenAI API key with anyone. It is a sensitive piece of information that should be kept private. If you are using a public notebook or sharing your code, make sure to remove or mask your API key before sharing. You can use environment variables or a `.env` file to store your API key securely.\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom openai import OpenAI, RateLimitError, APIError, APITimeoutError\nimport pandas as pd \nfrom tqdm.notebook import tqdm\nfrom dotenv import load_dotenv\nimport re\nimport numpy as np\nimport json\nimport argparse\nimport random\nimport time\nimport os\nimport ast\n\nload_dotenv(\"/Users/sm9518/Desktop/Article-Summarizer/.env\") # where i keep my API key... \napi_key = os.getenv(\"OPENAI_API_KEY\")\nif api_key:\n    print(\"API Key loaded successfully!\\n:)\")\nelse:\n    raise ValueError(\"API Key not found.\\nMake sure it is set in the .env file.\")\nmodel=\"gpt-3.5-turbo\" # set model. we dont need anything fancy for this task.\ntemperature=0 # set temp to be rather determinisitic \nSEED = random.seed(42) # set seed for reproducibility\n```\n:::\n\n\n\n## Load Data and Sample\n\nBefore we run the simulations, we have to create our dataset. This can be done by downloading the original kaggle dataset [here](https://www.kaggle.com/datasets/rzgiza/pokdex-for-all-1025-pokemon-w-text-description).\n\nOnce you've done so, we will extract the original 151 Pok√©mon and create a dataset of 20 matchups for each Pok√©mon.\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndf = pd.read_csv('/Users/sm9518/Library/CloudStorage/GoogleDrive-sm9518@princeton.edu/My Drive/Classes/Stats-blog/posts/final-project/data/pokedex.csv', index_col=0)\ndf.head()\n\nOG_pokedex = df.iloc[:151].copy() # take the OG 151 pokemon\n\n# build the 20‚Äêmatchups per Pok√©mon\nmatchups = []\nfor challenger in OG_pokedex['name']:\n    pool = [p for p in OG_pokedex['name'] if p != challenger]\n    opponents = random.sample(pool, 20) # give them 20 challengers\n    for opponent in opponents:\n        matchups.append({'challenger': challenger, 'opponent': opponent})\nmatchups_df = pd.DataFrame(matchups)\n\n\n\n# merge challenger metadata\nmatchups_with_meta = (\n    matchups_df\n    .merge(\n        OG_pokedex.add_suffix('_challenger'),\n        left_on='challenger',\n        right_on='name_challenger',\n        how='left'\n    )\n    # drop the redundant name_challenger column if you like\n    .drop(columns=['name_challenger'])\n    # merge opponent metadata\n    .merge(\n        OG_pokedex.add_suffix('_opponent'),\n        left_on='opponent',\n        right_on='name_opponent',\n        how='left'\n    )\n    .drop(columns=['name_opponent'])\n)\n\n# now every row has both challenger_* and opponent_* columns\nmatchups_with_meta.head()\n```\n:::\n\n\n\n## Hit the API to Simulate Match-ups\n\nOnce we've created the dataset, we can use the `OpenAI` API to simulate the match-ups. In short, for each battle, we will feed the stats of both Pok√©mon and ask GPT to determine the winner. We can then extract and save that data for downstream analyses.\n\n::: callout\nüí° The API call is rate limited, so we need to be careful about how many requests we send. We will use the `tqdm` library to show a progress bar and add a sleep time between requests to avoid hitting the rate limit.\n\nOur prompt is as follows:\n\n```         \n    \"Based on the stats, which Pok√©mon would win a one-on-one battle?\\n\\n\"\n    f\"{p1_stats}\\nVS\\n\\n{p2_stats}\\n\\n\"\n    \"Only respond with the name of the winning Pok√©mon.\"\n```\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Initialize OpenAI client\nclient = OpenAI()\n# ---- Utility Functions ---- #\n\ndef safe_parse_types(val):\n    if isinstance(val, list):\n        return val\n    try:\n        return ast.literal_eval(val)\n    except Exception:\n        return [str(val)]\n\ndef format_pokemon_stats(name, row, suffix):\n    types = safe_parse_types(row[f'type{suffix}'])\n    return (\n        f\"{name.title()}:\\n\"\n        f\"- Type: {', '.join(types)}\\n\"\n        f\"- HP: {row[f'hp{suffix}']}\\n\"\n        f\"- Attack: {row[f'attack{suffix}']}\\n\"\n        f\"- Defense: {row[f'defense{suffix}']}\\n\"\n        f\"- Special Attack: {row[f's_attack{suffix}']}\\n\"\n        f\"- Special Defense: {row[f's_defense{suffix}']}\\n\"\n        f\"- Speed: {row[f'speed{suffix}']}\\n\"\n    )\n\n# ---- API Interaction ---- #\n\ndef get_completion(prompt):\n    messages = [{\"role\": \"user\", \"content\": prompt}]\n    response = client.chat.completions.create(\n        model=model,\n        messages=messages,\n        temperature=temperature\n    )\n    return response.choices[0].message.content.strip()\n\ndef get_response(prompt):\n    try:\n        return get_completion(prompt)\n    except RateLimitError as e:\n        retry_time = getattr(e, 'retry_after', 30)\n        print(f\"Rate limit exceeded. Retrying in {retry_time} seconds...\")\n        time.sleep(retry_time)\n        return get_response(prompt)\n    except APIError as e:\n        print(f\"API error occurred: {e}. Retrying in 30 seconds...\")\n        time.sleep(30)\n        return get_response(prompt)\n    except APITimeoutError as e:\n        print(f\"Request timed out: {e}. Retrying in 10 seconds...\")\n        time.sleep(10)\n        return get_response(prompt)\n    except Exception as e:\n        print(f\"Unexpected error: {e}. Retrying in 10 seconds...\")\n        time.sleep(10)\n        return get_response(prompt)\n\n# ---- Simulate One Battle ---- #\n\ndef simulate_battle(row):\n    p1_stats = format_pokemon_stats(row['challenger'], row, '_challenger')\n    p2_stats = format_pokemon_stats(row['opponent'], row, '_opponent')\n\n    prompt = (\n        \"Based on the stats, which Pok√©mon would win a one-on-one battle?\\n\\n\"\n        f\"{p1_stats}\\nVS\\n\\n{p2_stats}\\n\\n\"\n        \"Only respond with the name of the winning Pok√©mon.\"\n    )\n\n    response = get_response(prompt)\n    return response.lower()\n\n# ---- Run All Simulations ---- #\n\n# This should be your DataFrame containing all matchups\n# matchups_with_meta = pd.read_csv(...)  # Load your data here\n\nresults = []\n\nfor idx, row in tqdm(matchups_with_meta.iterrows(), total=len(matchups_with_meta), desc=\"Simulating battles\"):\n    print(f\"Simulating battle {idx + 1} of {len(matchups_with_meta)}: {row['challenger']} vs {row['opponent']}\")\n    winner = simulate_battle(row)\n    results.append({\n        \"challenger\": row['challenger'],\n        \"opponent\": row['opponent'],\n        \"winner\": winner\n    })\n    time.sleep(1.5)  # Respect rate limits\n\n# ---- Save Results ---- #\n\nresults_df = pd.DataFrame(results)\nmatchups_with_results = matchups_with_meta.merge(\n    results_df,\n    on=[\"challenger\", \"opponent\"],\n    how=\"left\"\n)\nmatchups_with_results.head()\nmatchups_with_results.to_csv(f\"/Users/sm9518/Library/CloudStorage/GoogleDrive-sm9518@princeton.edu/My Drive/Classes/Stats-blog/posts/final-project/data/pokemon_battle_results_{model}_{SEED}_{temperature}.csv\", index=False)\nprint(f\"\\nDone! Winners saved to pokemon_battle_results_{model}_{SEED}_{temperature}.csv.\")\n```\n:::\n\n\n\n# Load Curated Dataset {.tabset}\n\nNow that we have our dataset, we can load it in and do some basic data cleaning. We will drop the text columns and the opponent information, as we are not interested in that. We will also scale the data to make it easier to interpret when modeling\n\n::: callout\nüí° For the sake of simplicity, we are only interested in the challenger Pokemon's stats.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath = '~/Library/CloudStorage/GoogleDrive-sm9518@princeton.edu/My Drive/Classes/Stats-blog/posts/final-project/data'\ndf = read_csv(file.path(path, 'pokemon_battle_results_gpt-3.5-turbo_None_0.csv')) \n\ndf_small <- df |> \n  dplyr::select(-dplyr::matches(c(\"info_\"))) |> #drop the text col and the opponent info, we aren't interested in that\n  mutate(\n    winner = ifelse(winner == challenger, 1, 0),\n    winner = factor(winner, levels = c(0, 1), labels = c(\"Loss\", \"Win\")),\n    challenger = as.factor(challenger),\n    opponent = as.factor(opponent),\n  ) |> \n  rename_with(~ str_replace(., \"_challenger$\", \"\"), ends_with(\"_challenger\")) # rename the challenger variable \n\ndf_small_scaled <- df_small %>%\n  mutate(across(c(height, weight, hp, attack, defense, s_attack, s_defense, speed,\n                  height_opponent, weight_opponent, hp_opponent, attack_opponent,\n                  defense_opponent, s_attack_opponent, s_defense_opponent, speed_opponent), \n                scale))\n```\n:::\n\n\n\n## Take a look at the data\n\nHere, we are taking a look at a random sample of the data to see if it looks like we expect. We can also use the `DT` package to create an interactive table that allows us to sort and filter the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_small |> \n  sample_n(10) |>\n  DT::datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-7c5c545dbfa0cc630d21\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7c5c545dbfa0cc630d21\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"nidorina\",\"chansey\",\"ekans\",\"doduo\",\"diglett\",\"starmie\",\"weedle\",\"ponyta\",\"butterfree\",\"pinsir\"],[\"krabby\",\"eevee\",\"butterfree\",\"squirtle\",\"exeggutor\",\"wigglytuff\",\"ponyta\",\"butterfree\",\"bulbasaur\",\"ditto\"],[8,11,20,14,2,11,3,10,11,15],[200,346,69,392,8,800,32,300,320,550],[70,250,35,35,10,60,40,50,60,65],[62,5,60,85,55,75,35,85,45,125],[67,5,44,45,25,85,30,55,50,100],[55,35,40,35,35,100,20,65,90,55],[55,105,54,35,45,85,20,65,80,70],[56,50,55,75,95,115,50,90,70,85],[\"{poison}\",\"{normal}\",\"{poison}\",\"{normal,flying}\",\"{ground}\",\"{water,psychic}\",\"{bug,poison}\",\"{fire}\",\"{bug,flying}\",\"{bug}\"],[12,51,9,36,21,56,5,32,4,62],[4,3,11,5,20,10,10,11,7,3],[65,65,320,90,1200,120,300,320,69,40],[30,55,60,44,95,140,50,60,45,48],[105,55,45,48,95,70,85,45,49,48],[90,50,50,65,85,45,55,50,49,48],[25,45,90,50,125,85,65,90,65,48],[25,65,80,64,75,50,65,80,65,48],[50,55,70,43,55,45,90,70,45,48],[\"{water}\",\"{normal}\",\"{bug,flying}\",\"{water}\",\"{grass,psychic}\",\"{normal,fairy}\",\"{fire}\",\"{bug,flying}\",\"{grass,poison}\",\"{normal}\"],[43,67,4,3,45,16,32,4,1,66],[\"Loss\",\"Win\",\"Loss\",\"Win\",\"Loss\",\"Win\",\"Loss\",\"Win\",\"Win\",\"Win\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>challenger<\\/th>\\n      <th>opponent<\\/th>\\n      <th>height<\\/th>\\n      <th>weight<\\/th>\\n      <th>hp<\\/th>\\n      <th>attack<\\/th>\\n      <th>defense<\\/th>\\n      <th>s_attack<\\/th>\\n      <th>s_defense<\\/th>\\n      <th>speed<\\/th>\\n      <th>type<\\/th>\\n      <th>evo_set<\\/th>\\n      <th>height_opponent<\\/th>\\n      <th>weight_opponent<\\/th>\\n      <th>hp_opponent<\\/th>\\n      <th>attack_opponent<\\/th>\\n      <th>defense_opponent<\\/th>\\n      <th>s_attack_opponent<\\/th>\\n      <th>s_defense_opponent<\\/th>\\n      <th>speed_opponent<\\/th>\\n      <th>type_opponent<\\/th>\\n      <th>evo_set_opponent<\\/th>\\n      <th>winner<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"challenger\",\"targets\":1},{\"name\":\"opponent\",\"targets\":2},{\"name\":\"height\",\"targets\":3},{\"name\":\"weight\",\"targets\":4},{\"name\":\"hp\",\"targets\":5},{\"name\":\"attack\",\"targets\":6},{\"name\":\"defense\",\"targets\":7},{\"name\":\"s_attack\",\"targets\":8},{\"name\":\"s_defense\",\"targets\":9},{\"name\":\"speed\",\"targets\":10},{\"name\":\"type\",\"targets\":11},{\"name\":\"evo_set\",\"targets\":12},{\"name\":\"height_opponent\",\"targets\":13},{\"name\":\"weight_opponent\",\"targets\":14},{\"name\":\"hp_opponent\",\"targets\":15},{\"name\":\"attack_opponent\",\"targets\":16},{\"name\":\"defense_opponent\",\"targets\":17},{\"name\":\"s_attack_opponent\",\"targets\":18},{\"name\":\"s_defense_opponent\",\"targets\":19},{\"name\":\"speed_opponent\",\"targets\":20},{\"name\":\"type_opponent\",\"targets\":21},{\"name\":\"evo_set_opponent\",\"targets\":22},{\"name\":\"winner\",\"targets\":23}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# Exploratory Data Analysis {.tabset}\n\nNow, we can start to explore the data. We will start by looking at the distribution of the various Pok√©mon stats. We will also look at the relationship between the stats and the outcome of the battle (win/loss). This will help us understand how the different stats relate to each other and to winning or losing a battle.\n\n## Visualize the distribution of the various Pok√©mon stats {.tabset}\n\n### Distribution of Pok√©mon stats\n\nFrom looking at the density plots we have some interesting insights. For example, we can see that the distribution of the Pok√©mon stats is not normal, and that there are some outliers in the data. We'll leave them in since we are interested in the relationship between the stats and the outcome of the battle and know this is how the Pokemon appear in the game.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_small |> \n  dplyr::select(3:12,-type) |> \n  pivot_longer(cols = everything(), names_to = \"stat\", values_to = \"value\") |> \n  ggplot(aes(x = value, fill = stat)) +\n  geom_density(alpha = 0.7) +\n  facet_wrap(~ stat, scales = \"free\",ncol = 3) +\n  labs(title = \"Distribution of Pok√©mon Stats\", x = \"Value\", y = \"Density\") +\n  scale_fill_manual(values = palette) +\n  plot_aes\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_distributions-1.png){width=960}\n:::\n:::\n\n\n\n### Comparing Distributions of Pok√©mon stats by outcome\n\nNow, let's look at the distribution of the Pok√©mon stats by winner. This will allow us to see if there are any differences in the different distributions between the winners and losers without running any analyses\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_small |> \n  dplyr::select(3:12, -type, winner) |> \n  rename(outcome = winner) |> \n  pivot_longer(cols = -outcome, names_to = \"stat\", values_to = \"value\") |> \n  ggplot(aes(x = value, fill = outcome)) +\n  geom_density(alpha = 0.7) +\n  facet_wrap(~ stat, scales = \"free\", ncol = 3) +\n  labs(title = \"Distribution of Pok√©mon Stats by Battle Outcome\", \n       x = \"Value\", y = \"Density\") +\n  scale_fill_manual(values = c(\"Win\" = \"#4daf4a\", \"Loss\" = \"#e41a1c\")) +\n  plot_aes\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_distributions by outcome-1.png){width=1152}\n:::\n:::\n\n\n\n### Comparing Relations between variables and outcomes\n\nThis plot shows how different Pok√©mon stats relate to each other and to winning or losing a battle. The diagonal panels show how each stat is distributed for winners (green) and losers (red). The lower panels show relationships between pairs of stats, with trendlines and points colored by outcome. The upper panels give the strength of the relationship between each pair of stats. Look for where the green and red separate‚Äîthose are the stats or stat combinations most associated with winning or losing.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define your color palette\nmy_colors <- c(\"Win\" = \"#4daf4a\", \"Loss\" = \"#e41a1c\")\n\ndf_small %>%\n  dplyr::select(3:12, -type, winner) %>%\n  rename(outcome = winner) |> \n  ggpairs(\n    columns = 1:9,  # Excludes winner column from variables\n    mapping = aes(color = outcome, alpha = 0.2),\n    lower = list(\n      continuous = wrap(\"smooth\", method = \"lm\", se = FALSE)\n    ),\n    upper = list(\n      continuous = wrap(\"cor\", size = 3, color = \"black\")\n    ),\n    diag = list(\n      continuous = function(data, mapping, ...) {\n        ggally_densityDiag(data = data, mapping = mapping, ...) +\n          scale_fill_manual(values = my_colors)\n      }\n    )\n  ) +\n  scale_color_manual(values = my_colors) +\n  theme(\n    axis.text = element_text(size = 6),\n    strip.text = element_text(size = 8),\n    legend.position = \"top\"\n  ) + plot_aes\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_rx bw vars and outcomes-1.png){width=1152}\n:::\n:::\n\n\n\n# Predict Outcomes with Multilevel Binary Logistic Regression using `Specr` {.tabset}\n\nNow that we have a sense of the various relationships, we can fit binary logistic regression models to predict our outcome (win/loss).\n\nWe will fit our models using a **specification curve analysis (SCA)** framework, via the `Specr` package in R. You can learn more about `Specr` [here](https://cran.r-project.org/web/packages/specr/vignettes/specr.html).\n\nSCA will allow us to see how the model changes as we add or remove variables in a transparent manner. Briefly, SCA is a method for exploring the robustness of statistical results across different model specifications. It involves systematically varying the model's parameters, such as the choice of predictors or the functional form, and examining how these changes affect the estimated coefficients and their significance.\n\nThe main goal is to assess whether the main findings hold up under different assumptions and to identify which specifications yield consistent results.\n\nIf you wish to learn more, you can read the following paper:\n\n[![SCA-paper](images/s41562-020-0912-z.pdf){fig-align=\"center\" width=\"800\" height=\"600\"}](https://www.nature.com/articles/s41562-020-0912-z)\n\n::: callout\n**Citation: Simonsohn, U., Simmons, J. P., & Nelson, L. D. (2020). Specification curve analysis. Nature Human Behaviour, 4(11), 1208‚Äì1214. https://doi.org/10.1038/s41562-020-0912-z**\n:::\n\n## Write functions and prep for SCA Analysis\n\nBefore we get into the nittygritty of running analyses, we need to define some helper functions for SCA. The first one is a function to run the binomial logistic regression model. The second one is a function to extract the r-squared values from the model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### write binomial logistic regression function to pass to specr\nglmer_binomial <- possibly(\n  function(formula, data) {\n    require(lme4)\n    require(broom.mixed)\n    glmer(formula,\n          data,\n          family = binomial(link = \"logit\"),\n          control = glmerControl(optimizer = \"bobyqa\"))\n  },\n  otherwise = NULL\n)\n\ntidy_new <- function(x) {\n  fit <- broom::tidy(x, conf.int = TRUE)\n  r2_vals <- tryCatch(\n    performance::r2(x),\n    error = function(e) NULL\n  )\n  r2_marginal <- NA\n  r2_conditional <- NA\n  \n  if (!is.null(r2_vals)) {\n    if (\"R2_marginal\" %in% names(r2_vals)) {\n      # Mixed models: store Marginal and Conditional R2\n      r2_marginal <- r2_vals$R2_marginal\n      r2_conditional <- r2_vals$R2_conditional\n    } else if (\"R2\" %in% names(r2_vals)) {\n      # Simple models: store R2 in marginal, NA in conditional\n      r2_marginal <- r2_vals$R2\n    }\n  }\n  fit$res <- list(x)\n  fit$r2_marginal <- r2_marginal\n  fit$r2_conditional <- r2_conditional\n  return(fit)\n}\n```\n:::\n\n\n\n## Set up the specifications\n\nThe `Specr` package allows us to set up the specifications for the models we want to run. We will set up the syntax for the models we want to run, including the variables we want to include in the model and the random effects. We will also set up a function to extract the results from the models.\n\nThe model we are trying to specify is `winner ~ Predictors + (1 | challenger)`.\n\n::: callout\nüí° In this case, we are including a random slope for the challenger variable. This means that we are allowing the effect of the challenger variable to vary across different levels of the data. This is important because it allows us to account for the fact that different challengers may have different effects on the outcome of the battle.\n:::\n\nHere is a brief breakdown of the different arguments\n\n::: callout\n-   `data`: The data frame containing the data to be analyzed.\n-   `x`: The independent variables to be included in the model.\n-   `y`: The dependent variable to be predicted.\n-   `model`: The type of model to be used. In this case, we are using a binomial logistic regression model, which we specified earlier\n-   `controls`: The control variables to be included in the model. These are the variables that we want to control for in the analysis.\n-   `add_to_formula`: The random effects to be included in the model. In this case, we are including a random slope for the challenger variable.\n-   `fun1`: The function to be used to extract the results from the model. In this case, we are using the `broom.mixed::tidy()` function to extract the results.\n-   `fun2`: The function to be used to extract the r-squared values from the model. In this case, we are using the `tidy_new()` function we defined earlier.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### generate the different models\nspecs = specr::setup(\n  data = df_small_scaled,\n  x = c(\"height\", \"weight\",\"attack\", \"defense\", \n        \"s_attack\", \"s_defense\", \"speed\"),\n  y = c('winner'),\n  model = c('glmer_binomial'),\n  controls = c(\"height\", \"weight\",\"attack\", \"defense\", \n        \"s_attack\", \"s_defense\", \"speed\",\"hp\"),\nadd_to_formula = \"(1 | challenger) \",  # Random slope\nfun1 = function(x) broom.mixed::tidy(x, conf.int = TRUE),\nfun2 = tidy_new\n \n)\n```\n:::\n\n\n\n## Define the formulas\n\nNow that we have set up the specifications, we can define the formulas for the models we want to run. The `specr` package allows us to define the formulas for the models we want to run and extract the results in a tidy format. Use the table below to inspect the various models we aim to run.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecs$specs <- specs$specs %>%\n  mutate(\n    controls_sorted = sapply(strsplit(as.character(controls), \",\"), function(x) paste(sort(trimws(x)), collapse = \",\"))\n  ) %>%\n  distinct(x, y, model, controls_sorted, .keep_all = TRUE) %>%  # REMOVE add_to_formula\n  dplyr::select(-controls_sorted)\n\n\nspecs$specs |> \n  dplyr::select(x, y, controls,formula) |>\n  DT::datatable(\n    options = list(\n      pageLength = 10,\n      autoWidth = TRUE,\n      columnDefs = list(list(width = '200px', targets = \"_all\"))\n    ),\n    rownames = FALSE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-5bd3a9b3c5dac17dc6f8\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5bd3a9b3c5dac17dc6f8\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"height\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"weight\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"attack\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"defense\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\"],[\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\"],[\"no covariates\",\"weight\",\"attack\",\"defense\",\"s_attack\",\"s_defense\",\"speed\",\"hp\",\"weight + attack\",\"weight + defense\",\"weight + s_attack\",\"weight + s_defense\",\"weight + speed\",\"weight + hp\",\"attack + defense\",\"attack + s_attack\",\"attack + s_defense\",\"attack + speed\",\"attack + hp\",\"defense + s_attack\",\"defense + s_defense\",\"defense + speed\",\"defense + hp\",\"s_attack + s_defense\",\"s_attack + speed\",\"s_attack + hp\",\"s_defense + speed\",\"s_defense + hp\",\"speed + hp\",\"weight + attack + defense\",\"weight + attack + s_attack\",\"weight + attack + s_defense\",\"weight + attack + speed\",\"weight + attack + hp\",\"weight + defense + s_attack\",\"weight + defense + s_defense\",\"weight + defense + speed\",\"weight + defense + hp\",\"weight + s_attack + s_defense\",\"weight + s_attack + speed\",\"weight + s_attack + hp\",\"weight + s_defense + speed\",\"weight + s_defense + hp\",\"weight + speed + hp\",\"attack + defense + s_attack\",\"attack + defense + s_defense\",\"attack + defense + speed\",\"attack + defense + hp\",\"attack + s_attack + s_defense\",\"attack + s_attack + speed\",\"attack + s_attack + hp\",\"attack + s_defense + speed\",\"attack + s_defense + hp\",\"attack + speed + hp\",\"defense + s_attack + s_defense\",\"defense + s_attack + speed\",\"defense + s_attack + hp\",\"defense + s_defense + speed\",\"defense + s_defense + hp\",\"defense + speed + hp\",\"s_attack + s_defense + speed\",\"s_attack + s_defense + hp\",\"s_attack + speed + hp\",\"s_defense + speed + hp\",\"weight + attack + defense + s_attack\",\"weight + attack + defense + s_defense\",\"weight + attack + defense + speed\",\"weight + attack + defense + hp\",\"weight + attack + s_attack + s_defense\",\"weight + attack + s_attack + speed\",\"weight + attack + s_attack + hp\",\"weight + attack + s_defense + speed\",\"weight + attack + s_defense + hp\",\"weight + attack + speed + hp\",\"weight + defense + s_attack + s_defense\",\"weight + defense + s_attack + speed\",\"weight + defense + s_attack + hp\",\"weight + defense + s_defense + speed\",\"weight + defense + s_defense + hp\",\"weight + defense + speed + hp\",\"weight + s_attack + s_defense + speed\",\"weight + s_attack + s_defense + hp\",\"weight + s_attack + speed + hp\",\"weight + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense\",\"attack + defense + s_attack + speed\",\"attack + defense + s_attack + hp\",\"attack + defense + s_defense + speed\",\"attack + defense + s_defense + hp\",\"attack + defense + speed + hp\",\"attack + s_attack + s_defense + speed\",\"attack + s_attack + s_defense + hp\",\"attack + s_attack + speed + hp\",\"attack + s_defense + speed + hp\",\"defense + s_attack + s_defense + speed\",\"defense + s_attack + s_defense + hp\",\"defense + s_attack + speed + hp\",\"defense + s_defense + speed + hp\",\"s_attack + s_defense + speed + hp\",\"weight + attack + defense + s_attack + s_defense\",\"weight + attack + defense + s_attack + speed\",\"weight + attack + defense + s_attack + hp\",\"weight + attack + defense + s_defense + speed\",\"weight + attack + defense + s_defense + hp\",\"weight + attack + defense + speed + hp\",\"weight + attack + s_attack + s_defense + speed\",\"weight + attack + s_attack + s_defense + hp\",\"weight + attack + s_attack + speed + hp\",\"weight + attack + s_defense + speed + hp\",\"weight + defense + s_attack + s_defense + speed\",\"weight + defense + s_attack + s_defense + hp\",\"weight + defense + s_attack + speed + hp\",\"weight + defense + s_defense + speed + hp\",\"weight + s_attack + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense + speed\",\"attack + defense + s_attack + s_defense + hp\",\"attack + defense + s_attack + speed + hp\",\"attack + defense + s_defense + speed + hp\",\"attack + s_attack + s_defense + speed + hp\",\"defense + s_attack + s_defense + speed + hp\",\"weight + attack + defense + s_attack + s_defense + speed\",\"weight + attack + defense + s_attack + s_defense + hp\",\"weight + attack + defense + s_attack + speed + hp\",\"weight + attack + defense + s_defense + speed + hp\",\"weight + attack + s_attack + s_defense + speed + hp\",\"weight + defense + s_attack + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense + speed + hp\",\"weight + attack + defense + s_attack + s_defense + speed + hp\",\"no covariates\",\"height\",\"attack\",\"defense\",\"s_attack\",\"s_defense\",\"speed\",\"hp\",\"height + attack\",\"height + defense\",\"height + s_attack\",\"height + s_defense\",\"height + speed\",\"height + hp\",\"attack + defense\",\"attack + s_attack\",\"attack + s_defense\",\"attack + speed\",\"attack + hp\",\"defense + s_attack\",\"defense + s_defense\",\"defense + speed\",\"defense + hp\",\"s_attack + s_defense\",\"s_attack + speed\",\"s_attack + hp\",\"s_defense + speed\",\"s_defense + hp\",\"speed + hp\",\"height + attack + defense\",\"height + attack + s_attack\",\"height + attack + s_defense\",\"height + attack + speed\",\"height + attack + hp\",\"height + defense + s_attack\",\"height + defense + s_defense\",\"height + defense + speed\",\"height + defense + hp\",\"height + s_attack + s_defense\",\"height + s_attack + speed\",\"height + s_attack + hp\",\"height + s_defense + speed\",\"height + s_defense + hp\",\"height + speed + hp\",\"attack + defense + s_attack\",\"attack + defense + s_defense\",\"attack + defense + speed\",\"attack + defense + hp\",\"attack + s_attack + s_defense\",\"attack + s_attack + speed\",\"attack + s_attack + hp\",\"attack + s_defense + speed\",\"attack + s_defense + hp\",\"attack + speed + hp\",\"defense + s_attack + s_defense\",\"defense + s_attack + speed\",\"defense + s_attack + hp\",\"defense + s_defense + speed\",\"defense + s_defense + hp\",\"defense + speed + hp\",\"s_attack + s_defense + speed\",\"s_attack + s_defense + hp\",\"s_attack + speed + hp\",\"s_defense + speed + hp\",\"height + attack + defense + s_attack\",\"height + attack + defense + s_defense\",\"height + attack + defense + speed\",\"height + attack + defense + hp\",\"height + attack + s_attack + s_defense\",\"height + attack + s_attack + speed\",\"height + attack + s_attack + hp\",\"height + attack + s_defense + speed\",\"height + attack + s_defense + hp\",\"height + attack + speed + hp\",\"height + defense + s_attack + s_defense\",\"height + defense + s_attack + speed\",\"height + defense + s_attack + hp\",\"height + defense + s_defense + speed\",\"height + defense + s_defense + hp\",\"height + defense + speed + hp\",\"height + s_attack + s_defense + speed\",\"height + s_attack + s_defense + hp\",\"height + s_attack + speed + hp\",\"height + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense\",\"attack + defense + s_attack + speed\",\"attack + defense + s_attack + hp\",\"attack + defense + s_defense + speed\",\"attack + defense + s_defense + hp\",\"attack + defense + speed + hp\",\"attack + s_attack + s_defense + speed\",\"attack + s_attack + s_defense + hp\",\"attack + s_attack + speed + hp\",\"attack + s_defense + speed + hp\",\"defense + s_attack + s_defense + speed\",\"defense + s_attack + s_defense + hp\",\"defense + s_attack + speed + hp\",\"defense + s_defense + speed + hp\",\"s_attack + s_defense + speed + hp\",\"height + attack + defense + s_attack + s_defense\",\"height + attack + defense + s_attack + speed\",\"height + attack + defense + s_attack + hp\",\"height + attack + defense + s_defense + speed\",\"height + attack + defense + s_defense + hp\",\"height + attack + defense + speed + hp\",\"height + attack + s_attack + s_defense + speed\",\"height + attack + s_attack + s_defense + hp\",\"height + attack + s_attack + speed + hp\",\"height + attack + s_defense + speed + hp\",\"height + defense + s_attack + s_defense + speed\",\"height + defense + s_attack + s_defense + hp\",\"height + defense + s_attack + speed + hp\",\"height + defense + s_defense + speed + hp\",\"height + s_attack + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense + speed\",\"attack + defense + s_attack + s_defense + hp\",\"attack + defense + s_attack + speed + hp\",\"attack + defense + s_defense + speed + hp\",\"attack + s_attack + s_defense + speed + hp\",\"defense + s_attack + s_defense + speed + hp\",\"height + attack + defense + s_attack + s_defense + speed\",\"height + attack + defense + s_attack + s_defense + hp\",\"height + attack + defense + s_attack + speed + hp\",\"height + attack + defense + s_defense + speed + hp\",\"height + attack + s_attack + s_defense + speed + hp\",\"height + defense + s_attack + s_defense + speed + hp\",\"attack + defense + s_attack + s_defense + speed + hp\",\"height + attack + defense + s_attack + s_defense + speed + hp\",\"no covariates\",\"height\",\"weight\",\"defense\",\"s_defense\",\"speed\",\"hp\",\"height + weight\",\"height + defense\",\"height + s_defense\",\"height + speed\",\"height + hp\",\"weight + defense\",\"weight + s_defense\",\"weight + speed\",\"weight + hp\",\"defense + s_defense\",\"defense + speed\",\"defense + hp\",\"s_defense + speed\",\"s_defense + hp\",\"speed + hp\",\"height + weight + defense\",\"height + weight + s_defense\",\"height + weight + speed\",\"height + weight + hp\",\"height + defense + s_defense\",\"height + defense + speed\",\"height + defense + hp\",\"height + s_defense + speed\",\"height + s_defense + hp\",\"height + speed + hp\",\"weight + defense + s_defense\",\"weight + defense + speed\",\"weight + defense + hp\",\"weight + s_defense + speed\",\"weight + s_defense + hp\",\"weight + speed + hp\",\"defense + s_defense + speed\",\"defense + s_defense + hp\",\"defense + speed + hp\",\"s_defense + speed + hp\",\"height + weight + defense + s_defense\",\"height + weight + defense + speed\",\"height + weight + defense + hp\",\"height + weight + s_defense + speed\",\"height + weight + s_defense + hp\",\"height + weight + speed + hp\",\"height + defense + s_defense + speed\",\"height + defense + s_defense + hp\",\"height + defense + speed + hp\",\"height + s_defense + speed + hp\",\"weight + defense + s_defense + speed\",\"weight + defense + s_defense + hp\",\"weight + defense + speed + hp\",\"weight + s_defense + speed + hp\",\"defense + s_defense + speed + hp\",\"height + weight + defense + s_defense + speed\",\"height + weight + defense + s_defense + hp\",\"height + weight + defense + speed + hp\",\"height + weight + s_defense + speed + hp\",\"height + defense + s_defense + speed + hp\",\"weight + defense + s_defense + speed + hp\",\"height + weight + defense + s_defense + speed + hp\",\"no covariates\",\"height\",\"weight\",\"attack\",\"s_attack\",\"speed\",\"hp\",\"height + weight\",\"height + attack\",\"height + s_attack\",\"height + speed\",\"height + hp\",\"weight + attack\",\"weight + s_attack\",\"weight + speed\",\"weight + hp\",\"attack + s_attack\",\"attack + speed\",\"attack + hp\",\"s_attack + speed\",\"s_attack + hp\",\"speed + hp\",\"height + weight + attack\",\"height + weight + s_attack\",\"height + weight + speed\",\"height + weight + hp\",\"height + attack + s_attack\",\"height + attack + speed\",\"height + attack + hp\",\"height + s_attack + speed\",\"height + s_attack + hp\",\"height + speed + hp\",\"weight + attack + s_attack\",\"weight + attack + speed\",\"weight + attack + hp\",\"weight + s_attack + speed\",\"weight + s_attack + hp\",\"weight + speed + hp\",\"attack + s_attack + speed\",\"attack + s_attack + hp\",\"attack + speed + hp\",\"s_attack + speed + hp\",\"height + weight + attack + s_attack\",\"height + weight + attack + speed\",\"height + weight + attack + hp\",\"height + weight + s_attack + speed\",\"height + weight + s_attack + hp\",\"height + weight + speed + hp\",\"height + attack + s_attack + speed\",\"height + attack + s_attack + hp\",\"height + attack + speed + hp\",\"height + s_attack + speed + hp\",\"weight + attack + s_attack + speed\",\"weight + attack + s_attack + hp\",\"weight + attack + speed + hp\",\"weight + s_attack + speed + hp\",\"attack + s_attack + speed + hp\",\"height + weight + attack + s_attack + speed\",\"height + weight + attack + s_attack + hp\",\"height + weight + attack + speed + hp\",\"height + weight + s_attack + speed + hp\",\"height + attack + s_attack + speed + hp\",\"weight + attack + s_attack + speed + hp\",\"height + weight + attack + s_attack + speed + hp\",\"no covariates\",\"height\",\"weight\",\"attack\",\"defense\",\"s_defense\",\"speed\",\"hp\",\"height + weight\",\"height + attack\",\"height + defense\",\"height + s_defense\",\"height + speed\",\"height + hp\",\"weight + attack\",\"weight + defense\",\"weight + s_defense\",\"weight + speed\",\"weight + hp\",\"attack + defense\",\"attack + s_defense\",\"attack + speed\",\"attack + hp\",\"defense + s_defense\",\"defense + speed\",\"defense + hp\",\"s_defense + speed\",\"s_defense + hp\",\"speed + hp\",\"height + weight + attack\",\"height + weight + defense\",\"height + weight + s_defense\",\"height + weight + speed\",\"height + weight + hp\",\"height + attack + defense\",\"height + attack + s_defense\",\"height + attack + speed\",\"height + attack + hp\",\"height + defense + s_defense\",\"height + defense + speed\",\"height + defense + hp\",\"height + s_defense + speed\",\"height + s_defense + hp\",\"height + speed + hp\",\"weight + attack + defense\",\"weight + attack + s_defense\",\"weight + attack + speed\",\"weight + attack + hp\",\"weight + defense + s_defense\",\"weight + defense + speed\",\"weight + defense + hp\",\"weight + s_defense + speed\",\"weight + s_defense + hp\",\"weight + speed + hp\",\"attack + defense + s_defense\",\"attack + defense + speed\",\"attack + defense + hp\",\"attack + s_defense + speed\",\"attack + s_defense + hp\",\"attack + speed + hp\",\"defense + s_defense + speed\",\"defense + s_defense + hp\",\"defense + speed + hp\",\"s_defense + speed + hp\",\"height + weight + attack + defense\",\"height + weight + attack + s_defense\",\"height + weight + attack + speed\",\"height + weight + attack + hp\",\"height + weight + defense + s_defense\",\"height + weight + defense + speed\",\"height + weight + defense + hp\",\"height + weight + s_defense + speed\",\"height + weight + s_defense + hp\",\"height + weight + speed + hp\",\"height + attack + defense + s_defense\",\"height + attack + defense + speed\",\"height + attack + defense + hp\",\"height + attack + s_defense + speed\",\"height + attack + s_defense + hp\",\"height + attack + speed + hp\",\"height + defense + s_defense + speed\",\"height + defense + s_defense + hp\",\"height + defense + speed + hp\",\"height + s_defense + speed + hp\",\"weight + attack + defense + s_defense\",\"weight + attack + defense + speed\",\"weight + attack + defense + hp\",\"weight + attack + s_defense + speed\",\"weight + attack + s_defense + hp\",\"weight + attack + speed + hp\",\"weight + defense + s_defense + speed\",\"weight + defense + s_defense + hp\",\"weight + defense + speed + hp\",\"weight + s_defense + speed + hp\",\"attack + defense + s_defense + speed\",\"attack + defense + s_defense + hp\",\"attack + defense + speed + hp\",\"attack + s_defense + speed + hp\",\"defense + s_defense + speed + hp\",\"height + weight + attack + defense + s_defense\",\"height + weight + attack + defense + speed\",\"height + weight + attack + defense + hp\",\"height + weight + attack + s_defense + speed\",\"height + weight + attack + s_defense + hp\",\"height + weight + attack + speed + hp\",\"height + weight + defense + s_defense + speed\",\"height + weight + defense + s_defense + hp\",\"height + weight + defense + speed + hp\",\"height + weight + s_defense + speed + hp\",\"height + attack + defense + s_defense + speed\",\"height + attack + defense + s_defense + hp\",\"height + attack + defense + speed + hp\",\"height + attack + s_defense + speed + hp\",\"height + defense + s_defense + speed + hp\",\"weight + attack + defense + s_defense + speed\",\"weight + attack + defense + s_defense + hp\",\"weight + attack + defense + speed + hp\",\"weight + attack + s_defense + speed + hp\",\"weight + defense + s_defense + speed + hp\",\"attack + defense + s_defense + speed + hp\",\"height + weight + attack + defense + s_defense + speed\",\"height + weight + attack + defense + s_defense + hp\",\"height + weight + attack + defense + speed + hp\",\"height + weight + attack + s_defense + speed + hp\",\"height + weight + defense + s_defense + speed + hp\",\"height + attack + defense + s_defense + speed + hp\",\"weight + attack + defense + s_defense + speed + hp\",\"height + weight + attack + defense + s_defense + speed + hp\",\"no covariates\",\"height\",\"weight\",\"attack\",\"defense\",\"s_attack\",\"speed\",\"hp\",\"height + weight\",\"height + attack\",\"height + defense\",\"height + s_attack\",\"height + speed\",\"height + hp\",\"weight + attack\",\"weight + defense\",\"weight + s_attack\",\"weight + speed\",\"weight + hp\",\"attack + defense\",\"attack + s_attack\",\"attack + speed\",\"attack + hp\",\"defense + s_attack\",\"defense + speed\",\"defense + hp\",\"s_attack + speed\",\"s_attack + hp\",\"speed + hp\",\"height + weight + attack\",\"height + weight + defense\",\"height + weight + s_attack\",\"height + weight + speed\",\"height + weight + hp\",\"height + attack + defense\",\"height + attack + s_attack\",\"height + attack + speed\",\"height + attack + hp\",\"height + defense + s_attack\",\"height + defense + speed\",\"height + defense + hp\",\"height + s_attack + speed\",\"height + s_attack + hp\",\"height + speed + hp\",\"weight + attack + defense\",\"weight + attack + s_attack\",\"weight + attack + speed\",\"weight + attack + hp\",\"weight + defense + s_attack\",\"weight + defense + speed\",\"weight + defense + hp\",\"weight + s_attack + speed\",\"weight + s_attack + hp\",\"weight + speed + hp\",\"attack + defense + s_attack\",\"attack + defense + speed\",\"attack + defense + hp\",\"attack + s_attack + speed\",\"attack + s_attack + hp\",\"attack + speed + hp\",\"defense + s_attack + speed\",\"defense + s_attack + hp\",\"defense + speed + hp\",\"s_attack + speed + hp\",\"height + weight + attack + defense\",\"height + weight + attack + s_attack\",\"height + weight + attack + speed\",\"height + weight + attack + hp\",\"height + weight + defense + s_attack\",\"height + weight + defense + speed\",\"height + weight + defense + hp\",\"height + weight + s_attack + speed\",\"height + weight + s_attack + hp\",\"height + weight + speed + hp\",\"height + attack + defense + s_attack\",\"height + attack + defense + speed\",\"height + attack + defense + hp\",\"height + attack + s_attack + speed\",\"height + attack + s_attack + hp\",\"height + attack + speed + hp\",\"height + defense + s_attack + speed\",\"height + defense + s_attack + hp\",\"height + defense + speed + hp\",\"height + s_attack + speed + hp\",\"weight + attack + defense + s_attack\",\"weight + attack + defense + speed\",\"weight + attack + defense + hp\",\"weight + attack + s_attack + speed\",\"weight + attack + s_attack + hp\",\"weight + attack + speed + hp\",\"weight + defense + s_attack + speed\",\"weight + defense + s_attack + hp\",\"weight + defense + speed + hp\",\"weight + s_attack + speed + hp\",\"attack + defense + s_attack + speed\",\"attack + defense + s_attack + hp\",\"attack + defense + speed + hp\",\"attack + s_attack + speed + hp\",\"defense + s_attack + speed + hp\",\"height + weight + attack + defense + s_attack\",\"height + weight + attack + defense + speed\",\"height + weight + attack + defense + hp\",\"height + weight + attack + s_attack + speed\",\"height + weight + attack + s_attack + hp\",\"height + weight + attack + speed + hp\",\"height + weight + defense + s_attack + speed\",\"height + weight + defense + s_attack + hp\",\"height + weight + defense + speed + hp\",\"height + weight + s_attack + speed + hp\",\"height + attack + defense + s_attack + speed\",\"height + attack + defense + s_attack + hp\",\"height + attack + defense + speed + hp\",\"height + attack + s_attack + speed + hp\",\"height + defense + s_attack + speed + hp\",\"weight + attack + defense + s_attack + speed\",\"weight + attack + defense + s_attack + hp\",\"weight + attack + defense + speed + hp\",\"weight + attack + s_attack + speed + hp\",\"weight + defense + s_attack + speed + hp\",\"attack + defense + s_attack + speed + hp\",\"height + weight + attack + defense + s_attack + speed\",\"height + weight + attack + defense + s_attack + hp\",\"height + weight + attack + defense + speed + hp\",\"height + weight + attack + s_attack + speed + hp\",\"height + weight + defense + s_attack + speed + hp\",\"height + attack + defense + s_attack + speed + hp\",\"weight + attack + defense + s_attack + speed + hp\",\"height + weight + attack + defense + s_attack + speed + hp\",\"no covariates\",\"height\",\"weight\",\"attack\",\"defense\",\"s_attack\",\"s_defense\",\"hp\",\"height + weight\",\"height + attack\",\"height + defense\",\"height + s_attack\",\"height + s_defense\",\"height + hp\",\"weight + attack\",\"weight + defense\",\"weight + s_attack\",\"weight + s_defense\",\"weight + hp\",\"attack + defense\",\"attack + s_attack\",\"attack + s_defense\",\"attack + hp\",\"defense + s_attack\",\"defense + s_defense\",\"defense + hp\",\"s_attack + s_defense\",\"s_attack + hp\",\"s_defense + hp\",\"height + weight + attack\",\"height + weight + defense\",\"height + weight + s_attack\",\"height + weight + s_defense\",\"height + weight + hp\",\"height + attack + defense\",\"height + attack + s_attack\",\"height + attack + s_defense\",\"height + attack + hp\",\"height + defense + s_attack\",\"height + defense + s_defense\",\"height + defense + hp\",\"height + s_attack + s_defense\",\"height + s_attack + hp\",\"height + s_defense + hp\",\"weight + attack + defense\",\"weight + attack + s_attack\",\"weight + attack + s_defense\",\"weight + attack + hp\",\"weight + defense + s_attack\",\"weight + defense + s_defense\",\"weight + defense + hp\",\"weight + s_attack + s_defense\",\"weight + s_attack + hp\",\"weight + s_defense + hp\",\"attack + defense + s_attack\",\"attack + defense + s_defense\",\"attack + defense + hp\",\"attack + s_attack + s_defense\",\"attack + s_attack + hp\",\"attack + s_defense + hp\",\"defense + s_attack + s_defense\",\"defense + s_attack + hp\",\"defense + s_defense + hp\",\"s_attack + s_defense + hp\",\"height + weight + attack + defense\",\"height + weight + attack + s_attack\",\"height + weight + attack + s_defense\",\"height + weight + attack + hp\",\"height + weight + defense + s_attack\",\"height + weight + defense + s_defense\",\"height + weight + defense + hp\",\"height + weight + s_attack + s_defense\",\"height + weight + s_attack + hp\",\"height + weight + s_defense + hp\",\"height + attack + defense + s_attack\",\"height + attack + defense + s_defense\",\"height + attack + defense + hp\",\"height + attack + s_attack + s_defense\",\"height + attack + s_attack + hp\",\"height + attack + s_defense + hp\",\"height + defense + s_attack + s_defense\",\"height + defense + s_attack + hp\",\"height + defense + s_defense + hp\",\"height + s_attack + s_defense + hp\",\"weight + attack + defense + s_attack\",\"weight + attack + defense + s_defense\",\"weight + attack + defense + hp\",\"weight + attack + s_attack + s_defense\",\"weight + attack + s_attack + hp\",\"weight + attack + s_defense + hp\",\"weight + defense + s_attack + s_defense\",\"weight + defense + s_attack + hp\",\"weight + defense + s_defense + hp\",\"weight + s_attack + s_defense + hp\",\"attack + defense + s_attack + s_defense\",\"attack + defense + s_attack + hp\",\"attack + defense + s_defense + hp\",\"attack + s_attack + s_defense + hp\",\"defense + s_attack + s_defense + hp\",\"height + weight + attack + defense + s_attack\",\"height + weight + attack + defense + s_defense\",\"height + weight + attack + defense + hp\",\"height + weight + attack + s_attack + s_defense\",\"height + weight + attack + s_attack + hp\",\"height + weight + attack + s_defense + hp\",\"height + weight + defense + s_attack + s_defense\",\"height + weight + defense + s_attack + hp\",\"height + weight + defense + s_defense + hp\",\"height + weight + s_attack + s_defense + hp\",\"height + attack + defense + s_attack + s_defense\",\"height + attack + defense + s_attack + hp\",\"height + attack + defense + s_defense + hp\",\"height + attack + s_attack + s_defense + hp\",\"height + defense + s_attack + s_defense + hp\",\"weight + attack + defense + s_attack + s_defense\",\"weight + attack + defense + s_attack + hp\",\"weight + attack + defense + s_defense + hp\",\"weight + attack + s_attack + s_defense + hp\",\"weight + defense + s_attack + s_defense + hp\",\"attack + defense + s_attack + s_defense + hp\",\"height + weight + attack + defense + s_attack + s_defense\",\"height + weight + attack + defense + s_attack + hp\",\"height + weight + attack + defense + s_defense + hp\",\"height + weight + attack + s_attack + s_defense + hp\",\"height + weight + defense + s_attack + s_defense + hp\",\"height + attack + defense + s_attack + s_defense + hp\",\"weight + attack + defense + s_attack + s_defense + hp\",\"height + weight + attack + defense + s_attack + s_defense + hp\"],[\"winner ~ height + 1 + (1 | challenger) \",\"winner ~ height + weight + (1 | challenger) \",\"winner ~ height + attack + (1 | challenger) \",\"winner ~ height + defense + (1 | challenger) \",\"winner ~ height + s_attack + (1 | challenger) \",\"winner ~ height + s_defense + (1 | challenger) \",\"winner ~ height + speed + (1 | challenger) \",\"winner ~ height + hp + (1 | challenger) \",\"winner ~ height + weight + attack + (1 | challenger) \",\"winner ~ height + weight + defense + (1 | challenger) \",\"winner ~ height + weight + s_attack + (1 | challenger) \",\"winner ~ height + weight + s_defense + (1 | challenger) \",\"winner ~ height + weight + speed + (1 | challenger) \",\"winner ~ height + weight + hp + (1 | challenger) \",\"winner ~ height + attack + defense + (1 | challenger) \",\"winner ~ height + attack + s_attack + (1 | challenger) \",\"winner ~ height + attack + s_defense + (1 | challenger) \",\"winner ~ height + attack + speed + (1 | challenger) \",\"winner ~ height + attack + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + (1 | challenger) \",\"winner ~ height + defense + s_defense + (1 | challenger) \",\"winner ~ height + defense + speed + (1 | challenger) \",\"winner ~ height + defense + hp + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + s_attack + speed + (1 | challenger) \",\"winner ~ height + s_attack + hp + (1 | challenger) \",\"winner ~ height + s_defense + speed + (1 | challenger) \",\"winner ~ height + s_defense + hp + (1 | challenger) \",\"winner ~ height + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ height + weight + attack + s_defense + (1 | challenger) \",\"winner ~ height + weight + attack + speed + (1 | challenger) \",\"winner ~ height + weight + attack + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ height + weight + defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + hp + (1 | challenger) \",\"winner ~ height + weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + weight + s_attack + speed + (1 | challenger) \",\"winner ~ height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ height + weight + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + speed + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ height + attack + defense + speed + (1 | challenger) \",\"winner ~ height + attack + defense + hp + (1 | challenger) \",\"winner ~ height + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ height + attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + attack + speed + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ height + defense + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ height + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ height + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + attack + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + 1 + (1 | challenger) \",\"winner ~ weight + height + (1 | challenger) \",\"winner ~ weight + attack + (1 | challenger) \",\"winner ~ weight + defense + (1 | challenger) \",\"winner ~ weight + s_attack + (1 | challenger) \",\"winner ~ weight + s_defense + (1 | challenger) \",\"winner ~ weight + speed + (1 | challenger) \",\"winner ~ weight + hp + (1 | challenger) \",\"winner ~ weight + height + attack + (1 | challenger) \",\"winner ~ weight + height + defense + (1 | challenger) \",\"winner ~ weight + height + s_attack + (1 | challenger) \",\"winner ~ weight + height + s_defense + (1 | challenger) \",\"winner ~ weight + height + speed + (1 | challenger) \",\"winner ~ weight + height + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + (1 | challenger) \",\"winner ~ weight + attack + s_attack + (1 | challenger) \",\"winner ~ weight + attack + s_defense + (1 | challenger) \",\"winner ~ weight + attack + speed + (1 | challenger) \",\"winner ~ weight + attack + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + (1 | challenger) \",\"winner ~ weight + defense + s_defense + (1 | challenger) \",\"winner ~ weight + defense + speed + (1 | challenger) \",\"winner ~ weight + defense + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + s_attack + speed + (1 | challenger) \",\"winner ~ weight + s_attack + hp + (1 | challenger) \",\"winner ~ weight + s_defense + speed + (1 | challenger) \",\"winner ~ weight + s_defense + hp + (1 | challenger) \",\"winner ~ weight + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + (1 | challenger) \",\"winner ~ weight + height + defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + hp + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ weight + attack + defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + defense + speed + (1 | challenger) \",\"winner ~ weight + height + attack + defense + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + 1 + (1 | challenger) \",\"winner ~ attack + height + (1 | challenger) \",\"winner ~ attack + weight + (1 | challenger) \",\"winner ~ attack + defense + (1 | challenger) \",\"winner ~ attack + s_defense + (1 | challenger) \",\"winner ~ attack + speed + (1 | challenger) \",\"winner ~ attack + hp + (1 | challenger) \",\"winner ~ attack + height + weight + (1 | challenger) \",\"winner ~ attack + height + defense + (1 | challenger) \",\"winner ~ attack + height + s_defense + (1 | challenger) \",\"winner ~ attack + height + speed + (1 | challenger) \",\"winner ~ attack + height + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + (1 | challenger) \",\"winner ~ attack + weight + s_defense + (1 | challenger) \",\"winner ~ attack + weight + speed + (1 | challenger) \",\"winner ~ attack + weight + hp + (1 | challenger) \",\"winner ~ attack + defense + s_defense + (1 | challenger) \",\"winner ~ attack + defense + speed + (1 | challenger) \",\"winner ~ attack + defense + hp + (1 | challenger) \",\"winner ~ attack + s_defense + speed + (1 | challenger) \",\"winner ~ attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + speed + (1 | challenger) \",\"winner ~ attack + height + weight + hp + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + (1 | challenger) \",\"winner ~ attack + height + defense + speed + (1 | challenger) \",\"winner ~ attack + height + defense + hp + (1 | challenger) \",\"winner ~ attack + height + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + speed + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + (1 | challenger) \",\"winner ~ attack + weight + defense + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + hp + (1 | challenger) \",\"winner ~ attack + weight + s_defense + speed + (1 | challenger) \",\"winner ~ attack + weight + s_defense + hp + (1 | challenger) \",\"winner ~ attack + weight + speed + hp + (1 | challenger) \",\"winner ~ attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + defense + speed + (1 | challenger) \",\"winner ~ attack + height + weight + defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + speed + hp + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ defense + 1 + (1 | challenger) \",\"winner ~ defense + height + (1 | challenger) \",\"winner ~ defense + weight + (1 | challenger) \",\"winner ~ defense + attack + (1 | challenger) \",\"winner ~ defense + s_attack + (1 | challenger) \",\"winner ~ defense + speed + (1 | challenger) \",\"winner ~ defense + hp + (1 | challenger) \",\"winner ~ defense + height + weight + (1 | challenger) \",\"winner ~ defense + height + attack + (1 | challenger) \",\"winner ~ defense + height + s_attack + (1 | challenger) \",\"winner ~ defense + height + speed + (1 | challenger) \",\"winner ~ defense + height + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + (1 | challenger) \",\"winner ~ defense + weight + s_attack + (1 | challenger) \",\"winner ~ defense + weight + speed + (1 | challenger) \",\"winner ~ defense + weight + hp + (1 | challenger) \",\"winner ~ defense + attack + s_attack + (1 | challenger) \",\"winner ~ defense + attack + speed + (1 | challenger) \",\"winner ~ defense + attack + hp + (1 | challenger) \",\"winner ~ defense + s_attack + speed + (1 | challenger) \",\"winner ~ defense + s_attack + hp + (1 | challenger) \",\"winner ~ defense + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + (1 | challenger) \",\"winner ~ defense + height + weight + speed + (1 | challenger) \",\"winner ~ defense + height + weight + hp + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + (1 | challenger) \",\"winner ~ defense + height + attack + speed + (1 | challenger) \",\"winner ~ defense + height + attack + hp + (1 | challenger) \",\"winner ~ defense + height + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + (1 | challenger) \",\"winner ~ defense + weight + attack + speed + (1 | challenger) \",\"winner ~ defense + weight + attack + hp + (1 | challenger) \",\"winner ~ defense + weight + s_attack + speed + (1 | challenger) \",\"winner ~ defense + weight + s_attack + hp + (1 | challenger) \",\"winner ~ defense + weight + speed + hp + (1 | challenger) \",\"winner ~ defense + attack + s_attack + speed + (1 | challenger) \",\"winner ~ defense + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + attack + speed + hp + (1 | challenger) \",\"winner ~ defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ defense + height + weight + attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + speed + hp + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + 1 + (1 | challenger) \",\"winner ~ s_attack + height + (1 | challenger) \",\"winner ~ s_attack + weight + (1 | challenger) \",\"winner ~ s_attack + attack + (1 | challenger) \",\"winner ~ s_attack + defense + (1 | challenger) \",\"winner ~ s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + speed + (1 | challenger) \",\"winner ~ s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + (1 | challenger) \",\"winner ~ s_attack + height + attack + (1 | challenger) \",\"winner ~ s_attack + height + defense + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + speed + (1 | challenger) \",\"winner ~ s_attack + height + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + (1 | challenger) \",\"winner ~ s_attack + weight + defense + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + speed + (1 | challenger) \",\"winner ~ s_attack + weight + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + attack + speed + (1 | challenger) \",\"winner ~ s_attack + attack + hp + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + 1 + (1 | challenger) \",\"winner ~ s_defense + height + (1 | challenger) \",\"winner ~ s_defense + weight + (1 | challenger) \",\"winner ~ s_defense + attack + (1 | challenger) \",\"winner ~ s_defense + defense + (1 | challenger) \",\"winner ~ s_defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + (1 | challenger) \",\"winner ~ s_defense + height + attack + (1 | challenger) \",\"winner ~ s_defense + height + defense + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + speed + (1 | challenger) \",\"winner ~ s_defense + height + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + (1 | challenger) \",\"winner ~ s_defense + weight + defense + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + speed + (1 | challenger) \",\"winner ~ s_defense + weight + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + attack + speed + (1 | challenger) \",\"winner ~ s_defense + attack + hp + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + defense + speed + (1 | challenger) \",\"winner ~ s_defense + defense + hp + (1 | challenger) \",\"winner ~ s_defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + weight + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + defense + speed + (1 | challenger) \",\"winner ~ s_defense + weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ speed + 1 + (1 | challenger) \",\"winner ~ speed + height + (1 | challenger) \",\"winner ~ speed + weight + (1 | challenger) \",\"winner ~ speed + attack + (1 | challenger) \",\"winner ~ speed + defense + (1 | challenger) \",\"winner ~ speed + s_attack + (1 | challenger) \",\"winner ~ speed + s_defense + (1 | challenger) \",\"winner ~ speed + hp + (1 | challenger) \",\"winner ~ speed + height + weight + (1 | challenger) \",\"winner ~ speed + height + attack + (1 | challenger) \",\"winner ~ speed + height + defense + (1 | challenger) \",\"winner ~ speed + height + s_attack + (1 | challenger) \",\"winner ~ speed + height + s_defense + (1 | challenger) \",\"winner ~ speed + height + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + (1 | challenger) \",\"winner ~ speed + weight + defense + (1 | challenger) \",\"winner ~ speed + weight + s_attack + (1 | challenger) \",\"winner ~ speed + weight + s_defense + (1 | challenger) \",\"winner ~ speed + weight + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + (1 | challenger) \",\"winner ~ speed + attack + s_attack + (1 | challenger) \",\"winner ~ speed + attack + s_defense + (1 | challenger) \",\"winner ~ speed + attack + hp + (1 | challenger) \",\"winner ~ speed + defense + s_attack + (1 | challenger) \",\"winner ~ speed + defense + s_defense + (1 | challenger) \",\"winner ~ speed + defense + hp + (1 | challenger) \",\"winner ~ speed + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + s_attack + hp + (1 | challenger) \",\"winner ~ speed + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + (1 | challenger) \",\"winner ~ speed + height + weight + defense + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + (1 | challenger) \",\"winner ~ speed + height + weight + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + (1 | challenger) \",\"winner ~ speed + height + attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + defense + s_defense + (1 | challenger) \",\"winner ~ speed + height + defense + hp + (1 | challenger) \",\"winner ~ speed + height + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + (1 | challenger) \",\"winner ~ speed + weight + attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + (1 | challenger) \",\"winner ~ speed + weight + defense + s_defense + (1 | challenger) \",\"winner ~ speed + weight + defense + hp + (1 | challenger) \",\"winner ~ speed + weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + s_defense + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + (1 | challenger) \",\"winner ~ speed + attack + defense + s_defense + (1 | challenger) \",\"winner ~ speed + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>x<\\/th>\\n      <th>y<\\/th>\\n      <th>controls<\\/th>\\n      <th>formula<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"autoWidth\":true,\"columnDefs\":[{\"width\":\"200px\",\"targets\":\"_all\"},{\"name\":\"x\",\"targets\":0},{\"name\":\"y\",\"targets\":1},{\"name\":\"controls\",\"targets\":2},{\"name\":\"formula\",\"targets\":3}],\"order\":[],\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Execute the Analyses in **parallel** using `furrr`\n\nNow that we have set up the specifications and defined the formulas, we can run the models.\n\nThe `specr` package allows us to run the models in parallel and extract the results in a tidy format, we'll utilize `furrr` to run our jobs in parallel to speed up the process. We'll also cache our output as a `.RDS` file, so each time we run the code, it won't have to re-run the models.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_path <- file.path(\"~/Library/CloudStorage/GoogleDrive-sm9518@princeton.edu/My Drive/Classes/Stats-blog/posts/final-project/models/sca_mode.rds\") # load in the model\n\nif (!file.exists(model_path)) { # if the file doesn't exist, then execute the code\n  specs <- readRDS(model_path)\n  plan() # check what plan we have\n  opts <- furrr_options(\n    globals = list(glmer_binomial = glmer_binomial) # tell the code we wanna use glmer \n  )\n  plan(strategy = multisession, workers = 6) # switch to multisession plan to make this run faster\n  results <- specr(\n    specs,\n    .options = opts,   # Pass opts to specr\n    .progress = TRUE\n  )\n  plan(sequential) # switch back to sequential once done running\n  saveRDS(results, model_path)\n} else { # if the file exists, then load it in\n  results <- readRDS(model_path)\n}\n```\n:::\n\n\n\n## View the Plots\n\nWe can view our results using the `plot` function from `specr`. This simplest way to visualize most of the information contained in the results dataframe produced by our analyses. Briefly, the first plot shows the odds ratios for each model, while the second plot shows the specifications used in each model. The odds ratios are plotted on a log scale, and the confidence intervals are shown as error bars. The second plot shows the specifications used in each model, with the x-axis showing the different specifications and the y-axis showing the number of models that used that specification.\n\nGiven that we have several hundred unique models this graph gets kinda crazy to look at. You can zoom in on the plot to see the details. We'll walk through two other ways to extract information from our results below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- plot(results, \n           type = \"curve\",\n           ci = T, \n           ribbon = F) +\n  geom_hline(yintercept = 0, \n             linetype = \"dashed\", \n             color = \"black\") +\n  labs(x = \"\", y = \"Odds Ratio\") + plot_aes\n\np2 <- plot(results, \n           type = \"choices\",\n           choices = c(\"x\", \"y\", \"controls\")) +\n  labs(x = \"specifications (ranked)\") +\n  plot_aes + \n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.text.y = element_text(size = 5),\n    axis.ticks.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.line.x = element_line(\"black\", size = .5),\n    axis.line.y = element_line(\"black\", size = .5)\n  )\n\nplot_grid(\n  p1, p2,\n  ncol = 1,           \n  align = \"v\",          \n  axis = \"rbl\",          \n  rel_heights = c(.60, 2.25)  \n)\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_sca plot-1.png){width=1152}\n:::\n:::\n\n\n\n## Individually Inspect the top N-Models\n\nNow that we used `specr()`, we can summarize individual specifications by using `broom::tidy()` and `broom::glance()`. For most cases, this provides a sufficient and appropriate summary of the relationship of interest and model characteristics. Sometimes, however, it might be useful to investigate specific models in more detail or to investigate a specific parameter that is not provided by the two functions (e.g., *r-square* or variance accounted for by the model).\n\n### Inspect the significant models\n\nFirst, we'll look at just the significant models (i.e., *p* \\< 0.05). This is done by filtering the results dataframe to only include significant models. We can then use the `DT` package to create an interactive table that allows us to sort and filter the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- results %>% \n  as_tibble() %>% \n  dplyr::select(formula, x, y, estimate, std.error, p.value, conf.low, conf.high) %>% \n  filter(p.value < 0.051) %>%  # keep only significant models\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = round(p.value, 3),\n    conf.low = round(conf.low, 3),\n    conf.high = round(conf.high, 3)\n  ) %>%\n  arrange(desc(abs(estimate)))\n\nmodels |>\n  DT::datatable(\n    options = list(\n      pageLength = 10,\n      autoWidth = TRUE,\n      columnDefs = list(list(targets = \"_all\"))\n    ),\n    rownames = FALSE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-13d196de0f2420290995\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-13d196de0f2420290995\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"winner ~ speed + height + defense + hp + (1 | challenger) \",\"winner ~ s_attack + 1 + (1 | challenger) \",\"winner ~ speed + height + weight + defense + hp + (1 | challenger) \",\"winner ~ speed + defense + hp + (1 | challenger) \",\"winner ~ speed + defense + (1 | challenger) \",\"winner ~ speed + hp + (1 | challenger) \",\"winner ~ speed + 1 + (1 | challenger) \",\"winner ~ speed + height + defense + (1 | challenger) \",\"winner ~ speed + height + weight + defense + (1 | challenger) \",\"winner ~ speed + weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + 1 + (1 | challenger) \",\"winner ~ s_attack + height + (1 | challenger) \",\"winner ~ speed + weight + defense + (1 | challenger) \",\"winner ~ speed + height + hp + (1 | challenger) \",\"winner ~ speed + height + weight + hp + (1 | challenger) \",\"winner ~ speed + weight + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + (1 | challenger) \",\"winner ~ s_attack + defense + (1 | challenger) \",\"winner ~ speed + height + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + (1 | challenger) \",\"winner ~ s_attack + weight + (1 | challenger) \",\"winner ~ s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + (1 | challenger) \",\"winner ~ s_attack + height + weight + (1 | challenger) \",\"winner ~ s_defense + height + (1 | challenger) \",\"winner ~ s_defense + defense + (1 | challenger) \",\"winner ~ speed + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ attack + 1 + (1 | challenger) \",\"winner ~ s_attack + attack + (1 | challenger) \",\"winner ~ s_defense + height + defense + (1 | challenger) \",\"winner ~ s_attack + height + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + (1 | challenger) \",\"winner ~ s_attack + weight + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + (1 | challenger) \",\"winner ~ speed + attack + defense + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + (1 | challenger) \",\"winner ~ speed + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + (1 | challenger) \",\"winner ~ s_defense + height + hp + (1 | challenger) \",\"winner ~ s_defense + defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + hp + (1 | challenger) \",\"winner ~ s_attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + (1 | challenger) \",\"winner ~ s_attack + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + hp + (1 | challenger) \",\"winner ~ speed + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + (1 | challenger) \",\"winner ~ speed + weight + attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + (1 | challenger) \",\"winner ~ speed + height + attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ attack + height + (1 | challenger) \",\"winner ~ speed + height + weight + attack + (1 | challenger) \",\"winner ~ speed + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + (1 | challenger) \",\"winner ~ speed + attack + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + hp + (1 | challenger) \",\"winner ~ attack + defense + (1 | challenger) \",\"winner ~ speed + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ speed + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + (1 | challenger) \",\"winner ~ speed + weight + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + defense + (1 | challenger) \",\"winner ~ speed + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + defense + s_defense + (1 | challenger) \",\"winner ~ s_defense + attack + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + (1 | challenger) \",\"winner ~ speed + weight + defense + s_defense + (1 | challenger) \",\"winner ~ speed + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + (1 | challenger) \",\"winner ~ speed + defense + s_defense + (1 | challenger) \",\"winner ~ speed + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + weight + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + (1 | challenger) \",\"winner ~ s_defense + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + (1 | challenger) \",\"winner ~ attack + height + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + (1 | challenger) \",\"winner ~ attack + height + weight + (1 | challenger) \",\"winner ~ s_defense + attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + hp + (1 | challenger) \",\"winner ~ s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + (1 | challenger) \",\"winner ~ speed + height + weight + s_defense + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + (1 | challenger) \",\"winner ~ s_defense + height + attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + hp + (1 | challenger) \",\"winner ~ speed + weight + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + (1 | challenger) \",\"winner ~ attack + weight + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + speed + (1 | challenger) \",\"winner ~ speed + weight + s_attack + hp + (1 | challenger) \",\"winner ~ attack + height + weight + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_defense + speed + (1 | challenger) \",\"winner ~ speed + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + defense + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + (1 | challenger) \",\"winner ~ speed + s_defense + (1 | challenger) \",\"winner ~ weight + 1 + (1 | challenger) \",\"winner ~ speed + s_attack + (1 | challenger) \",\"winner ~ speed + attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + attack + speed + (1 | challenger) \",\"winner ~ attack + defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + speed + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + (1 | challenger) \",\"winner ~ speed + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + (1 | challenger) \",\"winner ~ speed + height + s_defense + (1 | challenger) \",\"winner ~ s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + s_attack + (1 | challenger) \",\"winner ~ attack + height + defense + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + speed + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + speed + (1 | challenger) \",\"winner ~ speed + weight + attack + s_defense + (1 | challenger) \",\"winner ~ defense + speed + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + speed + (1 | challenger) \",\"winner ~ speed + height + s_attack + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ s_defense + s_attack + (1 | challenger) \",\"winner ~ attack + s_defense + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + speed + (1 | challenger) \",\"winner ~ attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + attack + s_defense + (1 | challenger) \",\"winner ~ defense + height + speed + (1 | challenger) \",\"winner ~ speed + height + attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + speed + (1 | challenger) \",\"winner ~ speed + height + weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ attack + height + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + (1 | challenger) \",\"winner ~ defense + 1 + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ attack + height + s_defense + hp + (1 | challenger) \",\"winner ~ defense + height + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + speed + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ s_attack + attack + speed + hp + (1 | challenger) \",\"winner ~ speed + weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + height + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + defense + speed + (1 | challenger) \",\"winner ~ s_attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + defense + speed + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_attack + speed + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_attack + height + speed + hp + (1 | challenger) \",\"winner ~ speed + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ weight + height + s_attack + speed + (1 | challenger) \",\"winner ~ attack + weight + s_defense + (1 | challenger) \",\"winner ~ attack + weight + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + hp + (1 | challenger) \",\"winner ~ defense + speed + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + speed + (1 | challenger) \",\"winner ~ speed + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_attack + weight + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + speed + hp + (1 | challenger) \",\"winner ~ attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + (1 | challenger) \",\"winner ~ weight + s_attack + (1 | challenger) \",\"winner ~ attack + height + s_defense + speed + (1 | challenger) \",\"winner ~ speed + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ speed + height + s_attack + s_defense + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_defense + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + speed + hp + (1 | challenger) \",\"winner ~ speed + height + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ defense + hp + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + (1 | challenger) \",\"winner ~ attack + weight + speed + (1 | challenger) \",\"winner ~ attack + height + weight + speed + (1 | challenger) \",\"winner ~ speed + attack + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + hp + (1 | challenger) \",\"winner ~ defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ speed + attack + s_attack + (1 | challenger) \",\"winner ~ weight + defense + (1 | challenger) \",\"winner ~ attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + speed + (1 | challenger) \",\"winner ~ s_attack + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + speed + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + speed + (1 | challenger) \",\"winner ~ attack + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ speed + height + weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ defense + weight + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + speed + (1 | challenger) \",\"winner ~ defense + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + 1 + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + defense + speed + (1 | challenger) \",\"winner ~ s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + speed + (1 | challenger) \",\"winner ~ speed + weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + s_attack + (1 | challenger) \",\"winner ~ attack + defense + speed + (1 | challenger) \",\"winner ~ s_defense + attack + defense + speed + (1 | challenger) \",\"winner ~ defense + height + weight + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + (1 | challenger) \",\"winner ~ attack + height + defense + speed + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + (1 | challenger) \",\"winner ~ attack + defense + s_defense + (1 | challenger) \",\"winner ~ s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + (1 | challenger) \",\"winner ~ defense + height + s_attack + speed + (1 | challenger) \",\"winner ~ defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ attack + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + defense + speed + (1 | challenger) \",\"winner ~ attack + weight + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + (1 | challenger) \",\"winner ~ defense + height + (1 | challenger) \",\"winner ~ s_defense + s_attack + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + hp + (1 | challenger) \",\"winner ~ s_attack + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ speed + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ defense + weight + speed + (1 | challenger) \",\"winner ~ weight + height + s_defense + speed + (1 | challenger) \",\"winner ~ attack + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ speed + height + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + speed + hp + (1 | challenger) \",\"winner ~ defense + height + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + speed + (1 | challenger) \",\"winner ~ attack + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + (1 | challenger) \",\"winner ~ s_attack + height + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + (1 | challenger) \",\"winner ~ weight + height + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + speed + (1 | challenger) \",\"winner ~ defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + (1 | challenger) \",\"winner ~ weight + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + s_attack + hp + (1 | challenger) \",\"winner ~ defense + weight + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ defense + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_attack + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + (1 | challenger) \",\"winner ~ defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + defense + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + speed + (1 | challenger) \",\"winner ~ defense + height + weight + hp + (1 | challenger) \",\"winner ~ weight + height + attack + speed + (1 | challenger) \",\"winner ~ s_attack + height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ attack + height + weight + defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + speed + hp + (1 | challenger) \",\"winner ~ height + hp + (1 | challenger) \",\"winner ~ defense + attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + speed + (1 | challenger) \",\"winner ~ s_attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + (1 | challenger) \",\"winner ~ weight + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + attack + speed + (1 | challenger) \",\"winner ~ s_attack + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + defense + speed + hp + (1 | challenger) \",\"winner ~ defense + height + weight + (1 | challenger) \",\"winner ~ weight + height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + attack + speed + (1 | challenger) \",\"winner ~ defense + weight + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + defense + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + defense + speed + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + s_defense + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ defense + height + s_attack + (1 | challenger) \",\"winner ~ defense + height + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + attack + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ attack + height + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + (1 | challenger) \",\"winner ~ height + defense + (1 | challenger) \",\"winner ~ attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ s_defense + weight + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + s_defense + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + s_defense + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + hp + (1 | challenger) \",\"winner ~ defense + weight + attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + speed + hp + (1 | challenger) \",\"winner ~ height + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + (1 | challenger) \",\"winner ~ weight + attack + defense + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + hp + (1 | challenger) \",\"winner ~ attack + height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ attack + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + speed + (1 | challenger) \",\"winner ~ attack + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + height + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + height + weight + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + s_attack + hp + (1 | challenger) \",\"winner ~ s_defense + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ defense + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + s_attack + speed + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ attack + height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + (1 | challenger) \",\"winner ~ height + s_attack + speed + (1 | challenger) \",\"winner ~ height + attack + (1 | challenger) \",\"winner ~ s_defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ defense + weight + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + s_attack + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ defense + height + weight + s_attack + (1 | challenger) \",\"winner ~ weight + height + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ height + defense + s_attack + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_defense + speed + (1 | challenger) \",\"winner ~ defense + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + (1 | challenger) \",\"winner ~ defense + attack + hp + (1 | challenger) \",\"winner ~ defense + height + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_defense + speed + (1 | challenger) \",\"winner ~ height + attack + defense + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + s_attack + (1 | challenger) \",\"winner ~ weight + attack + speed + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + hp + (1 | challenger) \",\"winner ~ weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + defense + s_attack + speed + (1 | challenger) \",\"winner ~ height + s_defense + hp + (1 | challenger) \",\"winner ~ s_defense + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + attack + hp + (1 | challenger) \",\"winner ~ weight + height + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_attack + hp + (1 | challenger) \",\"winner ~ defense + height + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + speed + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + hp + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ weight + attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + height + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ defense + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ s_defense + weight + attack + s_attack + speed + (1 | challenger) \",\"winner ~ weight + attack + s_attack + s_defense + (1 | challenger) \",\"winner ~ weight + height + attack + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ s_defense + weight + defense + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + speed + hp + (1 | challenger) \",\"winner ~ weight + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + speed + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + weight + attack + defense + s_defense + speed + hp + (1 | challenger) \",\"winner ~ height + s_attack + speed + hp + (1 | challenger) \",\"winner ~ height + weight + defense + s_attack + speed + hp + (1 | challenger) \"],[\"speed\",\"s_attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"s_defense\",\"s_attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"s_defense\",\"speed\",\"s_attack\",\"s_defense\",\"s_defense\",\"speed\",\"s_attack\",\"speed\",\"attack\",\"s_attack\",\"s_defense\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"s_defense\",\"s_defense\",\"speed\",\"s_attack\",\"s_attack\",\"s_defense\",\"s_attack\",\"s_attack\",\"s_defense\",\"s_attack\",\"s_attack\",\"s_defense\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"s_defense\",\"speed\",\"s_defense\",\"speed\",\"s_defense\",\"speed\",\"s_defense\",\"s_defense\",\"s_defense\",\"speed\",\"attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"attack\",\"attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"s_defense\",\"speed\",\"speed\",\"attack\",\"speed\",\"speed\",\"s_defense\",\"s_defense\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"attack\",\"s_defense\",\"s_defense\",\"s_defense\",\"attack\",\"speed\",\"attack\",\"s_defense\",\"s_defense\",\"s_attack\",\"s_defense\",\"s_defense\",\"s_defense\",\"speed\",\"speed\",\"speed\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_defense\",\"s_defense\",\"s_defense\",\"speed\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"attack\",\"s_defense\",\"attack\",\"s_defense\",\"s_attack\",\"speed\",\"attack\",\"speed\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_defense\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"speed\",\"s_attack\",\"attack\",\"s_attack\",\"attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"weight\",\"speed\",\"speed\",\"s_attack\",\"attack\",\"speed\",\"s_attack\",\"s_attack\",\"attack\",\"s_attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"speed\",\"attack\",\"speed\",\"s_defense\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"weight\",\"speed\",\"defense\",\"speed\",\"attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_defense\",\"attack\",\"speed\",\"s_attack\",\"s_attack\",\"attack\",\"speed\",\"speed\",\"defense\",\"speed\",\"s_attack\",\"weight\",\"speed\",\"s_attack\",\"s_defense\",\"speed\",\"attack\",\"s_attack\",\"defense\",\"s_attack\",\"attack\",\"defense\",\"s_defense\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_defense\",\"speed\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"s_attack\",\"speed\",\"speed\",\"weight\",\"s_defense\",\"speed\",\"weight\",\"attack\",\"attack\",\"attack\",\"attack\",\"defense\",\"speed\",\"speed\",\"s_attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"attack\",\"s_attack\",\"speed\",\"s_attack\",\"s_attack\",\"attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"attack\",\"s_defense\",\"weight\",\"attack\",\"speed\",\"speed\",\"speed\",\"speed\",\"speed\",\"s_defense\",\"defense\",\"speed\",\"defense\",\"speed\",\"attack\",\"attack\",\"speed\",\"weight\",\"s_defense\",\"weight\",\"defense\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"weight\",\"attack\",\"s_defense\",\"s_attack\",\"s_defense\",\"s_attack\",\"s_defense\",\"attack\",\"s_attack\",\"s_attack\",\"s_attack\",\"speed\",\"defense\",\"s_attack\",\"s_defense\",\"s_defense\",\"defense\",\"height\",\"s_defense\",\"speed\",\"s_defense\",\"s_attack\",\"s_attack\",\"s_attack\",\"s_defense\",\"speed\",\"weight\",\"attack\",\"s_defense\",\"defense\",\"s_defense\",\"attack\",\"s_defense\",\"attack\",\"s_attack\",\"s_attack\",\"attack\",\"defense\",\"defense\",\"s_attack\",\"weight\",\"attack\",\"s_attack\",\"attack\",\"weight\",\"attack\",\"attack\",\"s_attack\",\"s_defense\",\"attack\",\"attack\",\"defense\",\"s_defense\",\"attack\",\"attack\",\"s_attack\",\"weight\",\"s_attack\",\"speed\",\"s_defense\",\"s_defense\",\"defense\",\"weight\",\"attack\",\"s_attack\",\"speed\",\"attack\",\"s_attack\",\"s_defense\",\"defense\",\"s_defense\",\"weight\",\"s_attack\",\"s_defense\",\"s_defense\",\"weight\",\"attack\",\"attack\",\"s_attack\",\"s_defense\",\"s_attack\",\"weight\",\"weight\",\"weight\",\"weight\",\"s_defense\",\"s_defense\",\"defense\",\"s_defense\",\"defense\",\"s_defense\",\"s_defense\",\"s_defense\",\"defense\",\"s_defense\",\"s_attack\",\"s_defense\",\"weight\",\"weight\",\"weight\",\"weight\",\"defense\",\"defense\",\"s_attack\",\"defense\",\"weight\",\"defense\",\"s_attack\",\"weight\",\"weight\",\"weight\",\"defense\",\"weight\",\"attack\",\"defense\",\"weight\",\"s_attack\",\"weight\",\"weight\",\"s_attack\",\"s_attack\",\"attack\",\"s_defense\",\"height\",\"defense\",\"defense\",\"s_attack\",\"defense\",\"s_defense\",\"defense\",\"weight\",\"weight\",\"weight\",\"defense\",\"s_attack\",\"s_defense\",\"s_defense\",\"defense\",\"weight\",\"weight\",\"defense\",\"s_defense\",\"height\",\"weight\",\"attack\",\"weight\",\"s_defense\",\"s_defense\",\"attack\",\"weight\",\"s_defense\",\"weight\",\"s_defense\",\"weight\",\"s_defense\",\"defense\",\"defense\",\"defense\",\"s_defense\",\"weight\",\"weight\",\"s_defense\",\"attack\",\"s_defense\",\"height\",\"attack\",\"s_defense\",\"s_defense\",\"s_defense\",\"weight\",\"s_defense\",\"s_defense\",\"weight\",\"s_defense\",\"weight\",\"s_defense\",\"s_defense\",\"s_defense\",\"attack\",\"s_defense\",\"weight\",\"weight\",\"defense\",\"s_defense\",\"attack\",\"s_defense\",\"height\",\"s_defense\",\"s_defense\",\"s_defense\",\"weight\",\"s_defense\",\"weight\",\"weight\",\"attack\",\"s_defense\",\"attack\",\"attack\",\"attack\",\"s_defense\",\"defense\",\"height\",\"s_defense\",\"weight\",\"weight\",\"attack\",\"weight\",\"s_defense\",\"s_defense\",\"weight\",\"weight\",\"defense\",\"s_defense\",\"defense\",\"s_defense\",\"defense\",\"weight\",\"attack\",\"weight\",\"defense\",\"weight\",\"height\",\"height\",\"s_defense\",\"defense\",\"weight\",\"weight\",\"s_defense\",\"weight\",\"weight\",\"weight\",\"weight\",\"defense\",\"weight\",\"weight\",\"weight\",\"weight\",\"height\",\"defense\",\"s_defense\",\"weight\",\"weight\",\"defense\",\"weight\",\"s_defense\",\"height\",\"defense\",\"defense\",\"weight\",\"height\",\"s_defense\",\"height\",\"weight\",\"s_defense\",\"weight\",\"weight\",\"weight\",\"height\",\"weight\",\"s_defense\",\"height\",\"s_defense\",\"height\",\"weight\",\"weight\",\"weight\",\"weight\",\"defense\",\"weight\",\"height\",\"weight\",\"weight\",\"weight\",\"height\",\"s_defense\",\"weight\",\"s_defense\",\"defense\",\"s_defense\",\"weight\",\"weight\",\"s_defense\",\"height\",\"height\",\"weight\",\"height\",\"height\",\"height\",\"height\",\"height\"],[\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\",\"winner\"],[1.21,1.203,1.201,1.188,1.187,1.176,1.167,1.167,1.166,1.163,1.159,1.131,1.13,1.129,1.128,1.117,1.102,1.101,1.099,1.098,1.093,1.09,1.086,1.081,1.081,1.08,1.074,1.074,1.074,1.071,1.066,1.063,1.062,1.054,1.052,1.05,1.049,1.047,1.045,1.045,1.042,1.039,1.034,1.027,1.025,1.024,1.024,1.023,1.022,1.019,1.017,1.016,1.015,1.014,1.012,1.004,1.003,1.003,1.002,1.002,1.002,1,0.999,0.999,0.998,0.998,0.997,0.995,0.995,0.994,0.993,0.992,0.991,0.987,0.985,0.985,0.983,0.983,0.979,0.978,0.975,0.971,0.967,0.964,0.956,0.955,0.953,0.95,0.948,0.9389999999999999,0.9370000000000001,0.9360000000000001,0.9330000000000001,0.931,0.926,0.924,0.92,0.918,0.914,0.912,0.909,0.898,0.895,0.893,0.891,0.891,0.89,0.888,0.888,0.887,0.885,0.881,0.879,0.876,0.875,0.875,0.875,0.874,0.873,0.869,0.868,0.867,0.867,0.864,0.864,0.862,0.861,0.859,0.857,0.853,0.848,0.848,0.847,0.846,0.846,0.846,0.845,0.845,0.845,0.845,0.845,0.843,0.842,0.842,0.841,0.841,0.84,0.84,0.838,0.838,0.835,0.831,0.83,0.829,0.827,0.827,0.826,0.826,0.825,0.822,0.82,0.819,0.8169999999999999,0.8169999999999999,0.8169999999999999,0.8149999999999999,0.8139999999999999,0.8129999999999999,0.8120000000000001,0.8120000000000001,0.8120000000000001,0.8120000000000001,0.8110000000000001,0.8100000000000001,0.8070000000000001,0.8070000000000001,0.805,0.804,0.8,0.799,0.798,0.797,0.796,0.796,0.794,0.792,0.791,0.791,0.79,0.789,0.787,0.786,0.78,0.778,0.775,0.774,0.774,0.774,0.766,0.764,0.764,0.762,0.762,0.761,0.76,0.76,0.758,0.755,0.754,0.754,0.754,0.754,0.753,0.753,0.746,0.743,0.743,0.742,0.742,0.742,0.738,0.738,0.737,0.737,0.732,0.732,0.729,0.727,0.724,0.721,0.72,0.716,0.715,0.714,0.714,0.712,0.712,0.71,0.71,0.708,0.708,0.708,0.705,0.703,0.702,0.702,0.7,0.695,0.694,0.694,0.6919999999999999,0.6879999999999999,0.6879999999999999,0.6870000000000001,0.6860000000000001,0.6860000000000001,0.6820000000000001,0.6820000000000001,0.68,0.679,0.678,0.678,0.676,0.676,0.676,0.675,0.675,0.675,0.675,0.675,0.671,0.671,0.671,0.669,0.669,0.668,0.667,0.667,0.666,0.665,0.662,0.661,0.66,0.659,0.658,0.657,0.656,0.655,0.654,0.65,0.65,0.649,0.646,0.644,0.644,0.644,0.64,0.639,0.638,0.636,0.634,0.633,0.633,0.633,0.631,0.626,0.616,0.616,0.616,0.614,0.614,0.614,0.612,0.611,0.611,0.61,0.608,0.607,0.607,0.606,0.606,0.605,0.605,0.605,0.604,0.604,0.604,0.604,0.602,0.601,0.6,0.6,0.599,0.598,0.597,0.593,0.593,0.592,0.591,0.591,0.591,0.589,0.588,0.587,0.587,0.586,0.586,0.584,0.583,0.582,0.582,0.581,0.579,0.579,0.578,0.577,0.575,0.573,0.573,0.573,0.571,0.5659999999999999,0.5659999999999999,0.5659999999999999,0.5649999999999999,0.5639999999999999,0.5639999999999999,0.5620000000000001,0.5600000000000001,0.5600000000000001,0.5590000000000001,0.5570000000000001,0.556,0.555,0.553,0.553,0.553,0.553,0.552,0.55,0.548,0.546,0.546,0.541,0.541,0.539,0.539,0.538,0.537,0.536,0.535,0.535,0.53,0.527,0.526,0.525,0.525,0.524,0.522,0.521,0.521,0.52,0.518,0.515,0.512,0.509,0.506,0.505,0.505,0.5,0.499,0.498,0.495,0.494,0.492,0.491,0.488,0.487,0.487,0.483,0.482,0.48,0.479,0.479,0.475,0.475,0.474,0.473,0.47,0.466,0.466,0.465,0.462,0.46,0.46,0.459,0.459,0.458,0.457,0.456,0.456,0.455,0.452,0.45,0.448,0.448,0.446,0.444,0.44,0.435,0.434,0.432,0.427,0.427,0.424,0.423,0.423,0.422,0.422,0.422,0.42,0.418,0.418,0.416,0.414,0.412,0.412,0.409,0.409,0.406,0.406,0.405,0.4,0.398,0.396,0.396,0.395,0.394,0.393,0.389,0.387,0.386,0.386,0.385,0.384,0.382,0.381,0.381,0.38,0.378,0.377,0.377,0.374,0.374,0.373,0.372,0.371,0.371,0.37,0.368,0.366,0.365,0.363,0.363,0.359,0.359,0.358,0.356,0.355,0.351,0.351,0.348,0.347,0.346,0.345,0.341,0.338,0.338,0.337,0.334,0.331,0.33,0.328,0.328,0.328,0.327,0.327,0.32,0.319,0.318,0.316,0.314,0.312,0.308,0.306,0.302,0.298,0.297,0.297,0.296,0.292,0.292,0.291,0.291,0.291,0.29,0.288,0.286,0.286,0.285,0.283,0.283,0.282,0.278,0.278,0.274,0.271,0.269,0.269,0.265,0.264,0.263,0.263,0.261,0.261,0.26,0.259,0.258,0.257,0.255,0.254,0.252,0.25,0.247,0.242,0.241,0.238,0.236,0.234,0.234,0.228,-0.219,0.218,0.218,0.217,-0.216,0.214,0.212,0.21,0.207,0.207,0.205,0.204,0.204,0.203,-0.203,0.203,-0.192,-0.19,-0.187,0.184,-0.181],[0.095,0.126,0.093,0.092,0.108,0.11,0.127,0.111,0.103,0.092,0.122,0.121,0.101,0.111,0.105,0.103,0.092,0.112,0.119,0.092,0.122,0.11,0.113,0.139,0.125,0.113,0.125,0.113,0.09,0.117,0.09,0.128,0.098,0.117,0.119,0.099,0.113,0.111,0.111,0.099,0.113,0.097,0.098,0.095,0.096,0.095,0.101,0.096,0.096,0.098,0.097,0.103,0.14,0.128,0.097,0.095,0.115,0.12,0.097,0.098,0.119,0.111,0.095,0.13,0.096,0.095,0.111,0.096,0.095,0.097,0.097,0.114,0.125,0.093,0.135,0.096,0.125,0.096,0.13,0.129,0.137,0.092,0.131,0.1,0.089,0.089,0.098,0.104,0.094,0.095,0.127,0.143,0.109,0.115,0.096,0.104,0.108,0.08699999999999999,0.094,0.093,0.115,0.11,0.094,0.091,0.142,0.101,0.098,0.112,0.113,0.095,0.104,0.094,0.097,0.092,0.138,0.114,0.122,0.115,0.129,0.103,0.137,0.124,0.124,0.116,0.123,0.124,0.114,0.107,0.091,0.093,0.103,0.103,0.105,0.103,0.103,0.093,0.104,0.115,0.126,0.124,0.106,0.096,0.105,0.104,0.105,0.099,0.102,0.115,0.135,0.125,0.113,0.095,0.135,0.098,0.105,0.105,0.105,0.105,0.112,0.1,0.106,0.1,0.106,0.093,0.092,0.106,0.146,0.12,0.146,0.12,0.106,0.12,0.12,0.114,0.14,0.115,0.092,0.089,0.141,0.09,0.125,0.127,0.105,0.089,0.083,0.099,0.107,0.08500000000000001,0.126,0.113,0.128,0.1,0.098,0.141,0.082,0.114,0.097,0.099,0.095,0.107,0.08500000000000001,0.094,0.09,0.082,0.129,0.095,0.102,0.08699999999999999,0.144,0.099,0.099,0.08400000000000001,0.144,0.08400000000000001,0.112,0.117,0.117,0.117,0.117,0.125,0.112,0.08500000000000001,0.08799999999999999,0.08799999999999999,0.113,0.08400000000000001,0.097,0.109,0.097,0.118,0.106,0.098,0.118,0.115,0.08599999999999999,0.114,0.119,0.141,0.08400000000000001,0.115,0.092,0.096,0.119,0.083,0.08500000000000001,0.097,0.08500000000000001,0.102,0.102,0.094,0.081,0.082,0.082,0.08799999999999999,0.106,0.08400000000000001,0.105,0.083,0.08,0.168,0.119,0.09,0.111,0.119,0.119,0.119,0.119,0.08500000000000001,0.08400000000000001,0.08400000000000001,0.094,0.094,0.108,0.096,0.096,0.095,0.09,0.08500000000000001,0.093,0.09,0.094,0.09,0.09,0.08699999999999999,0.092,0.08699999999999999,0.08400000000000001,0.097,0.126,0.11,0.096,0.08599999999999999,0.083,0.106,0.08699999999999999,0.083,0.138,0.093,0.08599999999999999,0.131,0.082,0.106,0.106,0.08500000000000001,0.091,0.128,0.151,0.09,0.105,0.104,0.081,0.08699999999999999,0.147,0.092,0.109,0.082,0.11,0.115,0.093,0.094,0.102,0.082,0.08,0.083,0.092,0.102,0.099,0.096,0.08400000000000001,0.144,0.13,0.08699999999999999,0.098,0.117,0.09,0.11,0.101,0.082,0.132,0.109,0.091,0.104,0.121,0.11,0.12,0.123,0.111,0.089,0.123,0.097,0.078,0.092,0.112,0.124,0.093,0.124,0.119,0.1,0.099,0.08599999999999999,0.138,0.126,0.126,0.147,0.113,0.126,0.126,0.08699999999999999,0.119,0.08500000000000001,0.08500000000000001,0.129,0.128,0.103,0.123,0.098,0.08699999999999999,0.08500000000000001,0.098,0.08799999999999999,0.126,0.137,0.093,0.169,0.08599999999999999,0.123,0.094,0.103,0.096,0.096,0.09,0.124,0.09,0.094,0.113,0.116,0.129,0.127,0.132,0.096,0.1,0.08400000000000001,0.1,0.133,0.098,0.112,0.096,0.097,0.114,0.113,0.133,0.103,0.141,0.14,0.096,0.095,0.091,0.109,0.083,0.092,0.095,0.177,0.11,0.106,0.104,0.11,0.141,0.124,0.09,0.116,0.124,0.1,0.101,0.109,0.12,0.139,0.105,0.09,0.093,0.095,0.121,0.144,0.096,0.129,0.09,0.11,0.093,0.105,0.105,0.146,0.135,0.105,0.089,0.105,0.112,0.117,0.098,0.125,0.105,0.108,0.099,0.131,0.111,0.106,0.112,0.102,0.103,0.116,0.111,0.105,0.105,0.126,0.137,0.115,0.098,0.107,0.145,0.098,0.101,0.109,0.109,0.1,0.11,0.11,0.158,0.097,0.146,0.117,0.101,0.1,0.1,0.115,0.153,0.142,0.104,0.098,0.1,0.102,0.117,0.115,0.116,0.106,0.109,0.107,0.141,0.096,0.099,0.116,0.099,0.095,0.094,0.114,0.08400000000000001,0.11,0.114,0.08400000000000001,0.102,0.096,0.1,0.091,0.107,0.117,0.102,0.111,0.089,0.079,0.107,0.113,0.129,0.095,0.091,0.083,0.115,0.099,0.126,0.123,0.113,0.121,0.101,0.093,0.101,0.096,0.08400000000000001,0.135,0.114,0.114,0.08599999999999999,0.104,0.121,0.114,0.082,0.094,0.1,0.1,0.08699999999999999,0.1,0.123,0.106,0.133,0.091,0.108,0.129,0.09,0.12,0.117,0.104,0.117,0.105,0.119,0.106,0.098,0.091,0.121,0.103,0.123,0.109,0.08599999999999999,0.092,0.107,0.08699999999999999,0.08599999999999999,0.1,0.112,0.095,0.08500000000000001,0.095,0.101,0.102,0.092,0.08500000000000001,0.092,0.101,0.095,0.103,0.095,0.1,0.092,0.091,0.08699999999999999,0.092,0.091,0.08799999999999999],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.001,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.007,0,0,0,0,0.001,0,0,0,0,0,0,0,0,0.001,0,0,0,0,0,0.002,0,0,0,0,0,0,0,0.003,0.001,0,0,0,0,0,0,0.001,0,0,0,0.001,0,0,0,0,0,0,0,0,0,0.001,0.004,0.001,0,0,0.007,0,0,0,0,0,0,0,0.015,0,0.008999999999999999,0.001,0,0,0,0.001,0.014,0.008,0,0,0,0,0.002,0.001,0.002,0.001,0.001,0.001,0.011,0,0,0.002,0,0,0,0.002,0,0.002,0.003,0,0.001,0,0.001,0,0.002,0.005,0.001,0.003,0,0,0.002,0.004,0.013,0.001,0.001,0,0.007,0.002,0.015,0.014,0.008,0.014,0.003,0.001,0.004,0.002,0.001,0.031,0.011,0.011,0.001,0.006,0.018,0.012,0.001,0.003,0.005,0.006,0.001,0.006,0.028,0.011,0.043,0.004,0.014,0.042,0.004,0.03,0.026,0.012,0.027,0.014,0.03,0.016,0.008999999999999999,0.006,0.038,0.017,0.05,0.026,0.005,0.01,0.029,0.007,0.008,0.028,0.051,0.022,0.011,0.023,0.034,0.037,0.022,0.015,0.024,0.041,0.031,0.048,0.032,0.042,0.027,0.036,0.028,0.042,0.045,0.04],[1.023,0.956,1.019,1.007,0.975,0.96,0.918,0.949,0.964,0.983,0.919,0.893,0.931,0.912,0.922,0.915,0.923,0.883,0.865,0.917,0.853,0.875,0.864,0.8090000000000001,0.836,0.858,0.829,0.853,0.898,0.841,0.89,0.8120000000000001,0.87,0.824,0.819,0.857,0.828,0.829,0.827,0.851,0.82,0.848,0.842,0.84,0.837,0.837,0.826,0.834,0.834,0.826,0.827,0.8149999999999999,0.741,0.763,0.822,0.8169999999999999,0.778,0.768,0.8129999999999999,0.8100000000000001,0.768,0.783,0.8129999999999999,0.744,0.8100000000000001,0.8120000000000001,0.78,0.806,0.8080000000000001,0.803,0.803,0.769,0.746,0.804,0.72,0.796,0.737,0.794,0.725,0.726,0.708,0.791,0.711,0.768,0.782,0.781,0.76,0.746,0.763,0.753,0.6870000000000001,0.656,0.718,0.707,0.738,0.719,0.708,0.746,0.73,0.729,0.6840000000000001,0.6830000000000001,0.711,0.715,0.612,0.6929999999999999,0.697,0.669,0.667,0.701,0.6820000000000001,0.697,0.6879999999999999,0.696,0.605,0.651,0.636,0.648,0.62,0.666,0.599,0.624,0.624,0.636,0.624,0.62,0.637,0.65,0.68,0.672,0.646,0.645,0.642,0.644,0.643,0.665,0.641,0.62,0.599,0.602,0.638,0.655,0.636,0.638,0.636,0.647,0.64,0.614,0.573,0.593,0.614,0.646,0.5659999999999999,0.636,0.621,0.622,0.62,0.62,0.606,0.627,0.613,0.622,0.61,0.635,0.638,0.608,0.528,0.577,0.525,0.576,0.604,0.576,0.575,0.587,0.533,0.582,0.624,0.629,0.523,0.622,0.552,0.547,0.591,0.622,0.63,0.598,0.581,0.624,0.543,0.5669999999999999,0.536,0.59,0.589,0.502,0.614,0.551,0.585,0.58,0.579,0.554,0.596,0.578,0.586,0.601,0.507,0.573,0.5590000000000001,0.585,0.473,0.5600000000000001,0.5600000000000001,0.589,0.471,0.589,0.526,0.515,0.515,0.513,0.513,0.498,0.518,0.572,0.5639999999999999,0.5639999999999999,0.511,0.5669999999999999,0.539,0.512,0.533,0.489,0.513,0.524,0.483,0.488,0.545,0.489,0.479,0.434,0.546,0.483,0.528,0.519,0.472,0.54,0.536,0.512,0.534,0.496,0.494,0.509,0.533,0.527,0.528,0.514,0.477,0.521,0.477,0.52,0.523,0.349,0.445,0.503,0.458,0.442,0.442,0.441,0.441,0.509,0.511,0.51,0.486,0.487,0.46,0.48,0.48,0.481,0.491,0.501,0.483,0.49,0.477,0.484,0.483,0.487,0.478,0.487,0.491,0.465,0.406,0.434,0.462,0.479,0.483,0.436,0.474,0.482,0.369,0.458,0.47,0.379,0.473,0.425,0.425,0.468,0.453,0.376,0.32,0.439,0.411,0.41,0.455,0.444,0.324,0.43,0.397,0.449,0.393,0.381,0.425,0.422,0.406,0.445,0.448,0.441,0.423,0.405,0.41,0.416,0.438,0.32,0.345,0.429,0.407,0.369,0.42,0.378,0.396,0.43,0.332,0.376,0.412,0.386,0.352,0.372,0.351,0.345,0.369,0.409,0.342,0.392,0.43,0.4,0.359,0.336,0.396,0.334,0.342,0.378,0.379,0.404,0.3,0.319,0.319,0.278,0.344,0.317,0.317,0.392,0.327,0.393,0.392,0.305,0.306,0.353,0.312,0.359,0.382,0.386,0.359,0.378,0.3,0.276,0.364,0.209,0.372,0.297,0.354,0.335,0.348,0.348,0.359,0.292,0.354,0.343,0.304,0.297,0.272,0.275,0.263,0.332,0.326,0.356,0.322,0.255,0.319,0.29,0.318,0.315,0.281,0.278,0.237,0.295,0.219,0.22,0.304,0.305,0.308,0.273,0.324,0.302,0.295,0.134,0.262,0.271,0.271,0.26,0.197,0.231,0.293,0.24,0.223,0.269,0.265,0.247,0.224,0.187,0.253,0.281,0.274,0.27,0.219,0.172,0.264,0.197,0.272,0.232,0.263,0.237,0.235,0.149,0.17,0.227,0.252,0.22,0.204,0.193,0.23,0.178,0.216,0.21,0.227,0.161,0.2,0.208,0.195,0.211,0.21,0.181,0.192,0.199,0.199,0.158,0.131,0.173,0.204,0.187,0.11,0.202,0.196,0.175,0.174,0.191,0.171,0.17,0.074,0.192,0.095,0.152,0.182,0.182,0.182,0.152,0.074,0.096,0.169,0.179,0.176,0.172,0.141,0.142,0.138,0.156,0.149,0.153,0.083,0.17,0.164,0.13,0.161,0.166,0.167,0.125,0.183,0.13,0.121,0.176,0.138,0.149,0.141,0.155,0.121,0.102,0.128,0.109,0.153,0.172,0.117,0.1,0.067,0.132,0.137,0.151,0.08599999999999999,0.115,0.059,0.06,0.077,0.059,0.099,0.114,0.093,0.103,0.127,0.027,0.068,0.067,0.12,0.081,0.049,0.061,0.123,0.098,0.08699999999999999,0.081,0.107,0.078,0.029,0.061,0.008999999999999999,0.08599999999999999,0.053,0.01,0.08599999999999999,0.026,0.031,0.056,0.029,0.053,0.024,0.047,0.062,0.074,0.014,0.044,0.001,0.028,0.07000000000000001,0.056,0.024,0.064,0.059,-0.414,-0.001,0.032,0.051,-0.401,0.017,0.013,0.031,0.04,0.027,0.008,0.018,0.002,0.017,-0.399,0.023,-0.371,-0.36,-0.366,0.004,-0.354],[1.397,1.451,1.384,1.369,1.4,1.391,1.416,1.385,1.368,1.343,1.398,1.369,1.328,1.347,1.333,1.318,1.282,1.32,1.332,1.279,1.332,1.305,1.308,1.353,1.325,1.302,1.32,1.296,1.251,1.3,1.242,1.314,1.254,1.283,1.285,1.243,1.271,1.265,1.263,1.239,1.264,1.23,1.226,1.214,1.212,1.21,1.221,1.212,1.21,1.211,1.207,1.218,1.288,1.264,1.202,1.19,1.229,1.238,1.191,1.193,1.235,1.217,1.186,1.254,1.186,1.183,1.215,1.183,1.181,1.184,1.183,1.215,1.235,1.169,1.251,1.174,1.229,1.172,1.234,1.23,1.243,1.152,1.223,1.161,1.13,1.129,1.146,1.154,1.133,1.125,1.187,1.217,1.147,1.156,1.114,1.128,1.133,1.089,1.097,1.095,1.134,1.113,1.08,1.072,1.17,1.089,1.083,1.107,1.109,1.074,1.089,1.065,1.07,1.057,1.145,1.098,1.113,1.099,1.126,1.071,1.137,1.111,1.11,1.092,1.104,1.105,1.085,1.069,1.035,1.035,1.051,1.05,1.053,1.049,1.048,1.027,1.05,1.07,1.091,1.089,1.052,1.031,1.048,1.046,1.046,1.035,1.04,1.066,1.104,1.083,1.055,1.017,1.094,1.021,1.033,1.033,1.031,1.032,1.043,1.017,1.027,1.015,1.024,0.999,0.997,1.023,1.1,1.049,1.099,1.047,1.019,1.048,1.046,1.034,1.081,1.032,0.986,0.979,1.077,0.976,1.043,1.047,1.001,0.97,0.957,0.986,1.002,0.958,1.036,1.01,1.039,0.982,0.971,1.054,0.9370000000000001,0.996,0.963,0.968,0.952,0.974,0.931,0.945,0.9379999999999999,0.921,1.014,0.947,0.958,0.925,1.036,0.949,0.947,0.918,1.035,0.917,0.966,0.972,0.972,0.971,0.971,0.987,0.957,0.905,0.909,0.909,0.953,0.897,0.919,0.9409999999999999,0.914,0.953,0.928,0.908,0.947,0.9389999999999999,0.882,0.9350000000000001,0.945,0.986,0.874,0.9320000000000001,0.887,0.896,0.9379999999999999,0.866,0.868,0.892,0.866,0.895,0.894,0.879,0.851,0.848,0.848,0.859,0.894,0.85,0.888,0.845,0.837,1.009,0.912,0.854,0.894,0.91,0.91,0.909,0.909,0.842,0.838,0.84,0.855,0.856,0.882,0.858,0.857,0.855,0.844,0.833,0.849,0.841,0.846,0.837,0.837,0.83,0.838,0.828,0.82,0.845,0.901,0.866,0.838,0.8179999999999999,0.8100000000000001,0.853,0.8139999999999999,0.806,0.91,0.821,0.806,0.893,0.795,0.841,0.84,0.799,0.8090000000000001,0.877,0.912,0.793,0.821,0.8179999999999999,0.772,0.785,0.901,0.791,0.825,0.77,0.823,0.832,0.789,0.789,0.806,0.766,0.762,0.768,0.784,0.803,0.798,0.793,0.766,0.883,0.855,0.771,0.791,0.827,0.773,0.8080000000000001,0.79,0.753,0.851,0.805,0.771,0.792,0.825,0.802,0.822,0.828,0.803,0.759,0.825,0.772,0.734,0.762,0.798,0.822,0.76,0.82,0.8090000000000001,0.769,0.768,0.742,0.841,0.8129999999999999,0.8129999999999999,0.853,0.786,0.8110000000000001,0.8120000000000001,0.732,0.794,0.727,0.726,0.8100000000000001,0.8070000000000001,0.756,0.793,0.746,0.723,0.72,0.744,0.722,0.795,0.8149999999999999,0.729,0.872,0.71,0.781,0.724,0.741,0.726,0.725,0.711,0.777,0.706,0.711,0.748,0.752,0.779,0.772,0.78,0.71,0.716,0.6850000000000001,0.714,0.776,0.705,0.728,0.694,0.694,0.728,0.722,0.76,0.7,0.77,0.769,0.681,0.677,0.667,0.7,0.65,0.664,0.668,0.827,0.695,0.6860000000000001,0.679,0.6889999999999999,0.751,0.715,0.647,0.6929999999999999,0.71,0.661,0.659,0.674,0.696,0.731,0.666,0.636,0.639,0.642,0.6919999999999999,0.738,0.639,0.703,0.624,0.664,0.628,0.651,0.646,0.721,0.699,0.638,0.602,0.633,0.645,0.653,0.615,0.667,0.628,0.634,0.613,0.676,0.636,0.623,0.633,0.612,0.614,0.636,0.626,0.612,0.612,0.652,0.67,0.623,0.587,0.605,0.68,0.587,0.591,0.604,0.601,0.581,0.601,0.6,0.6929999999999999,0.571,0.666,0.609,0.578,0.574,0.573,0.602,0.674,0.653,0.576,0.5649999999999999,0.5669999999999999,0.569,0.599,0.594,0.594,0.573,0.577,0.572,0.635,0.548,0.552,0.583,0.548,0.537,0.535,0.572,0.512,0.5629999999999999,0.569,0.505,0.539,0.526,0.534,0.513,0.54,0.5590000000000001,0.529,0.546,0.503,0.482,0.537,0.541,0.571,0.505,0.496,0.478,0.538,0.501,0.553,0.544,0.519,0.535,0.496,0.479,0.49,0.48,0.454,0.556,0.514,0.513,0.457,0.491,0.524,0.508,0.444,0.467,0.478,0.475,0.448,0.47,0.513,0.478,0.529,0.444,0.475,0.517,0.44,0.497,0.491,0.463,0.489,0.463,0.489,0.463,0.446,0.431,0.486,0.449,0.484,0.454,0.406,0.416,0.444,0.404,0.397,-0.024,0.437,0.404,0.384,-0.03,0.412,0.412,0.39,0.374,0.387,0.403,0.39,0.405,0.388,-0.007,0.382,-0.013,-0.02,-0.007,0.363,-0.008]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>formula<\\/th>\\n      <th>x<\\/th>\\n      <th>y<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>p.value<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"autoWidth\":true,\"columnDefs\":[{\"targets\":\"_all\"},{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7]},{\"name\":\"formula\",\"targets\":0},{\"name\":\"x\",\"targets\":1},{\"name\":\"y\",\"targets\":2},{\"name\":\"estimate\",\"targets\":3},{\"name\":\"std.error\",\"targets\":4},{\"name\":\"p.value\",\"targets\":5},{\"name\":\"conf.low\",\"targets\":6},{\"name\":\"conf.high\",\"targets\":7}],\"order\":[],\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### How does R-squared change with different models?\n\nWe can also evaluate the best model by looking at the conditional r-square value. We start by ranking the models by their conditional r-square value and then plotting the results. This will allow us to see which models are the best predictors of the outcome.\n\nFrom the results below, we can see that we can account for over 50% of the variance in the outcome using just the challenger pokemon's stats. This is a pretty good result, and it suggests that we can use these stats to predict the outcome of a battle. However, we still don't quite know what the *recipe* for the best model is yet.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_model <- results %>% \n  as_tibble() %>% \n  dplyr::select(formula, x, y, estimate, std.error, p.value, conf.low, conf.high,fit_r2_conditional) %>% \n  filter(p.value < 0.051) %>%  # keep only significant models\n  mutate(\n    estimate = round(estimate, 3),\n    std.error = round(std.error, 3),\n    p.value = round(p.value, 3),\n    conf.low = round(conf.low, 3),\n    conf.high = round(conf.high, 3)\n  ) \n\nbest_model %>%\n  arrange(fit_r2_conditional) %>%\n  mutate(rank = 1:n()) %>%\n  ggplot(aes(x = rank, y = fit_r2_conditional)) +\n  geom_line(color = \"#ADA7C9\", size = 0.85) +  # smooth teal-ish line\n  geom_point(size = 1.5, alpha = 0.7, color = \"#4D4861\") +  # darker small points\n  theme_minimal(base_family = \"Futura Medium\") +  # match your font\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    axis.line = element_line(color = \"black\", size = 0.5),\n    axis.ticks = element_line(color = \"black\"),\n    axis.text = element_text(color = \"black\"),\n    strip.text = element_blank()\n  ) +\n  labs(\n    x = \"Model Rank\",\n    y = \"Conditional R¬≤\"\n  ) +\n  plot_aes\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_r-squared-change-1.png){width=1152}\n:::\n:::\n\n\n\n### What seems to be the best model?\n\nNow that we have a sense of the best model, we can plot the results using `ggplot` to create a bargraph that shows us how much variance each of the top 50 models accounts for.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_model %>%\n  arrange(desc(fit_r2_conditional), desc(estimate)) %>%\n  head(50) %>%\n  mutate(rank = 1:n()) %>%\n  ggplot(aes(x = factor(rank), \n             y = fit_r2_conditional, \n             fill = fit_r2_conditional)) +  # Use fit_r2_conditional for color fill\n  geom_col() +\n  geom_text(aes(label = formula), \n            vjust = -0.5, \n            size = 3, \n            angle = 90) +\n  scale_fill_gradient(low = \"#ee9b00\", high = \"#c44536\") +  # Gradient from low to high values\n  plot_aes + \n  theme(\n    strip.text = element_blank(),\n    axis.line = element_line(color = \"black\", size = .5),\n    axis.text = element_text(color = \"black\"),\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels by 45 degrees\n    legend.position = \"none\"\n  ) +\n  labs(x = \"Model Rank\", y = \"Conditional R¬≤\") +\n  ylim(0, 0.55)\n```\n\n::: {.cell-output-display}\n![](Final_Project_figs/fig_best model-1.png){width=1344}\n:::\n:::\n\n\n\nBased on what our graph tell's us, the best model is `(1 | challenger) + s_defense`. This model accounts for 55% of the variance in the outcome, which is a pretty good result. However, it's important to note that this is a pretty simple model and there are likely other factors that could be included to improve the model. For example, we could include the opponent's stats or other variables that might be relevant to the outcome of the battle. If anything, this goes ot show how balanced of a meta Pokemon has.\n\nThanks for following along!\n\n::: {style=\"text-align: center;\"}\n![](https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExNnN5MTBlOTkzMXBidmR2cHJ5dW1hdThhY2kydWJraXo0eTE3bDYxYiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3oz8xHEisOJuebgmhq/giphy.gif)\n:::\n\nIf you'd like to learn more about SCA, I'd recommend checking out ‚ú®Dr. Dani Cosme's ‚ú® [website](https://dcosme.github.io/2019/06/28/specification-curve-analysis-sca-tutorial/). She's an amazing person, teacher, and has a ton of great resources on SCA and other statistical methods in `R`. I especially recommend this [reproducibililty workshop](https://dcosme.github.io/2022/03/18/reproducibility-workshop/).\n\n# Package Citations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport::cite_packages()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  - Bates D, M√§chler M, Bolker B, Walker S (2015). \"Fitting Linear Mixed-Effects Models Using lme4.\" _Journal of Statistical Software_, *67*(1), 1-48. doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>.\n  - Bates D, Maechler M, Jagan M (2024). _Matrix: Sparse and Dense Matrix Classes and Methods_. R package version 1.7-0, <https://CRAN.R-project.org/package=Matrix>.\n  - Bengtsson H (2021). \"A Unifying Framework for Parallel and Distributed Processing in R using Futures.\" _The R Journal_, *13*(2), 208-227. doi:10.32614/RJ-2021-048 <https://doi.org/10.32614/RJ-2021-048>, <https://doi.org/10.32614/RJ-2021-048>.\n  - Christensen R (2023). _ordinal-Regression Models for Ordinal Data_. R package version 2023.12-4.1, <https://CRAN.R-project.org/package=ordinal>.\n  - Fox J, Weisberg S (2019). _An R Companion to Applied Regression_, Third edition. Sage, Thousand Oaks CA. <https://socialsciences.mcmaster.ca/jfox/Books/Companion/>.\n  - Fox J, Weisberg S, Price B (2022). _carData: Companion to Applied Regression Data Sets_. R package version 3.0-5, <https://CRAN.R-project.org/package=carData>.\n  - Grolemund G, Wickham H (2011). \"Dates and Times Made Easy with lubridate.\" _Journal of Statistical Software_, *40*(3), 1-25. <https://www.jstatsoft.org/v40/i03/>.\n  - Lenth R (2025). _emmeans: Estimated Marginal Means, aka Least-Squares Means_. R package version 1.10.7, <https://CRAN.R-project.org/package=emmeans>.\n  - L√ºdecke D (2018). \"ggeffects: Tidy Data Frames of Marginal Effects from Regression Models.\" _Journal of Open Source Software_, *3*(26), 772. doi:10.21105/joss.00772 <https://doi.org/10.21105/joss.00772>.\n  - L√ºdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). \"performance: An R Package for Assessment, Comparison and Testing of Statistical Models.\" _Journal of Open Source Software_, *6*(60), 3139. doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>.\n  - Masur P, Scharkow M (2020). \"specr: Conducting and Visualizing Specification Curve Analyses (Version 1.0.0).\" <https://CRAN.R-project.org/package=specr>.\n  - M√ºller K, Wickham H (2023). _tibble: Simple Data Frames_. R package version 3.2.1, <https://CRAN.R-project.org/package=tibble>.\n  - R Core Team (2024). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.\n  - Rinker TW, Kurkiewicz D (2018). _pacman: Package Management for R_. version 0.5.0, <http://github.com/trinker/pacman>.\n  - Robinson D, Hayes A, Couch S (2024). _broom: Convert Statistical Objects into Tidy Tibbles_. R package version 1.0.7, <https://CRAN.R-project.org/package=broom>.\n  - Schlegel B, Steenbergen M (2020). _brant: Test for Parallel Regression Assumption_. R package version 0.3-0, <https://CRAN.R-project.org/package=brant>.\n  - Schloerke B, Cook D, Larmarange J, Briatte F, Marbach M, Thoen E, Elberg A, Crowley J (2024). _GGally: Extension to 'ggplot2'_. R package version 2.2.1, <https://CRAN.R-project.org/package=GGally>.\n  - Vaughan D, Dancho M (2022). _furrr: Apply Mapping Functions in Parallel using Futures_. R package version 0.3.1, <https://CRAN.R-project.org/package=furrr>.\n  - Venables WN, Ripley BD (2002). _Modern Applied Statistics with S_, Fourth edition. Springer, New York. ISBN 0-387-95457-0, <https://www.stats.ox.ac.uk/pub/MASS4/>.\n  - Wickham H (2016). _ggplot2: Elegant Graphics for Data Analysis_. Springer-Verlag New York. ISBN 978-3-319-24277-4, <https://ggplot2.tidyverse.org>.\n  - Wickham H (2023). _forcats: Tools for Working with Categorical Variables (Factors)_. R package version 1.0.0, <https://CRAN.R-project.org/package=forcats>.\n  - Wickham H (2023). _stringr: Simple, Consistent Wrappers for Common String Operations_. R package version 1.5.1, <https://CRAN.R-project.org/package=stringr>.\n  - Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Fran√ßois R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, M√ºller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to the tidyverse.\" _Journal of Open Source Software_, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n  - Wickham H, Fran√ßois R, Henry L, M√ºller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://CRAN.R-project.org/package=dplyr>.\n  - Wickham H, Henry L (2025). _purrr: Functional Programming Tools_. R package version 1.0.4, <https://CRAN.R-project.org/package=purrr>.\n  - Wickham H, Hester J, Bryan J (2024). _readr: Read Rectangular Text Data_. R package version 2.1.5, <https://CRAN.R-project.org/package=readr>.\n  - Wickham H, Vaughan D, Girlich M (2024). _tidyr: Tidy Messy Data_. R package version 1.3.1, <https://CRAN.R-project.org/package=tidyr>.\n  - Xie Y, Cheng J, Tan X (2024). _DT: A Wrapper of the JavaScript Library 'DataTables'_. R package version 0.33, <https://CRAN.R-project.org/package=DT>.\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}